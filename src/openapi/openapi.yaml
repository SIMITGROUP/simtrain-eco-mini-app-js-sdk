openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        "200":
          description: ""
  /log/search/{docName}/{id}:
    get:
      operationId: searchDocumentEvent
      summary: ""
      description: Search Document Event
      parameters:
        - name: docName
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DocumentEventListItem"
      tags:
        - LOG
  /maintenance/get-updates:
    get:
      operationId: MaintenanceController_getUpdate
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UpgradeScript"
      tags: &a1
        - maintenance
  /maintenance/run-updates/{id}:
    post:
      operationId: MaintenanceController_runUpdate
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      tags: *a1
  /maintenance/service-status:
    get:
      operationId: MaintenanceController_runGetServiceStatus
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: boolean
      tags: *a1
  /maintenance/stop-service:
    post:
      operationId: MaintenanceController_runStopService
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: string
      tags: *a1
  /maintenance/start-service:
    post:
      operationId: MaintenanceController_runStartService
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: string
      tags: *a1
  /profile:
    get:
      operationId: getProfile
      summary: ""
      description: Get current user profile
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserContextInfo"
        "401":
          description: Undefine profile
          content:
            application/json:
              schema:
                type: object
      tags: &a2
        - PROFILE
  /profile/session:
    get:
      operationId: getSession
      summary: ""
      description: Get current user session
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/String"
        "401":
          description: Expired
          content:
            application/json:
              schema:
                type: object
      tags: *a2
  /profile/tenants:
    get:
      operationId: getAllTenants
      summary: ""
      description: Get all tenants
      parameters: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/"
        "401":
          description: Undefine profile
          content:
            application/json:
              schema:
                type: object
      tags: *a2
  /profile/photo:
    post:
      operationId: uploadPhoto
      summary: ""
      description: Upload avatar image with base64
      parameters: []
      requestBody:
        required: true
        description: base64 photo
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyValue"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: string
      tags: *a2
  /profile/tenant:
    post:
      operationId: createTenant
      summary: ""
      description: create new tenant
      parameters: []
      requestBody:
        required: true
        description: create tenant name
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegTenant"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: object
      tags: *a2
  /profile/invitation/{id}/{decision}:
    post:
      operationId: decideInvitation
      summary: ""
      description: accept or reject invitation to tenant
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: decision
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: object
      tags: *a2
  /profile/tour-complete/{guidename}:
    post:
      operationId: runTourComplete
      summary: ""
      description: complete specific tour guide
      parameters:
        - name: guidename
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                type: object
      tags: *a2
  /user:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a3
        - USER
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a3
  /user/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a3
  /user/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a3
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a3
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a3
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a3
  /user/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserAutoComplete"
        "500":
          description: Internal error
      tags: *a3
  /user/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a3
  /permission:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a4
        - PERMISSION
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Permission"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Permission"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a4
  /permission/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Permission"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a4
  /permission/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Permission"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a4
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Permission"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a4
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Permission"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a4
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Permission"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a4
  /permission/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PermissionAutoComplete"
        "500":
          description: Internal error
      tags: *a4
  /permission/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a4
  /tenant:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a5
        - TENANT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a5
  /tenant/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tenant"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a5
  /tenant/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a5
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a5
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tenant"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a5
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tenant"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a5
  /tenant/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TenantAutoComplete"
        "500":
          description: Internal error
      tags: *a5
  /tenant/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a5
  /organization:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a6
        - ORGANIZATION
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a6
  /organization/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a6
  /organization/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a6
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a6
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a6
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a6
  /organization/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganizationAutoComplete"
        "500":
          description: Internal error
      tags: *a6
  /organization/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a6
  /branch:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a7
        - BRANCH
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Branch"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branch"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a7
  /branch/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Branch"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a7
  /branch/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branch"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a7
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Branch"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a7
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Branch"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a7
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Branch"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a7
  /branch/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BranchAutoComplete"
        "500":
          description: Internal error
      tags: *a7
  /branch/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a7
  /keyvaluepair:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a8
        - KEYVALUEPAIR
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyValuePair"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValuePair"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a8
  /keyvaluepair/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/KeyValuePair"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a8
  /keyvaluepair/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValuePair"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a8
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyValuePair"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a8
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyValuePair"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a8
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KeyValuePair"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a8
  /keyvaluepair/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/KeyValuePairAutoComplete"
        "500":
          description: Internal error
      tags: *a8
  /keyvaluepair/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a8
  /miniappinstallation:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a9
        - MINIAPPINSTALLATION
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MiniAppInstallation"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniAppInstallation"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a9
  /miniappinstallation/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MiniAppInstallation"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a9
  /miniappinstallation/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniAppInstallation"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a9
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MiniAppInstallation"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a9
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MiniAppInstallation"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a9
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniAppInstallation"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a9
  /miniappinstallation/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MiniAppInstallationAutoComplete"
        "500":
          description: Internal error
      tags: *a9
  /miniappinstallation/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a9
  /mini-app-manager/mini-apps/{miniAppCode}/install:
    put:
      operationId: runInstallMiniApp
      summary: ""
      parameters:
        - name: miniAppCode
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Install a miniApp
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniAppInstallation"
      tags: &a10
        - MINIAPPMANAGER
  /mini-app-manager/mini-apps/{miniAppCode}/uninstall:
    put:
      operationId: runUninstallMiniApp
      summary: ""
      parameters:
        - name: miniAppCode
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Uninstall a miniApp
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniAppInstallation"
      tags: *a10
  /mini-app-manager/mini-apps/{miniAppCode}/update-setting:
    put:
      operationId: runUpdateMiniAppSetting
      summary: ""
      parameters:
        - name: miniAppCode
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DynamicParam"
      responses:
        "200":
          description: Update miniApp setting
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniAppInstallation"
      tags: *a10
  /mini-app-manager/installed-mini-apps:
    get:
      operationId: runGetInstalledMiniApps
      summary: ""
      parameters: []
      responses:
        "200":
          description: Get installed miniApps
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstalledMiniAppDetail"
      tags: *a10
  /mini-app-manager/categorized-mini-apps:
    get:
      operationId: runGetCategorizedMiniApps
      summary: ""
      parameters: []
      responses:
        "200":
          description: Get categorized miniApps
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategorizedMiniAppDetail"
      tags: *a10
  /mini-app-manager/mini-apps/{miniAppCode}:
    get:
      operationId: runGetMiniAppDetail
      summary: ""
      parameters:
        - name: miniAppCode
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get miniApp detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniAppDetail"
      tags: *a10
  /mini-app-manager/system-default-mini-apps-migration:
    post:
      operationId: runSystemDefaultMiniAppMigration
      summary: ""
      parameters: []
      responses:
        "200":
          description: Migrate system default miniApp.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MiniApp"
      tags: *a10
  /developer/publish-dev/{developerPortalAppId}:
    post:
      operationId: runDeveloperPublishDev
      summary: ""
      parameters:
        - name: developerPortalAppId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MiniApp"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniApp"
      tags: &a11
        - DEVELOPERPORTAL
  /developer/publish/{developerPortalAppId}:
    post:
      operationId: runDeveloperPublish
      summary: ""
      parameters:
        - name: developerPortalAppId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MiniApp"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniApp"
      tags: *a11
  /developer/installed-xorgs/{developerPortalAppId}:
    get:
      operationId: runDeveloperInstalledXOrgs
      summary: ""
      parameters:
        - name: developerPortalAppId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeveloperPortalInstalledXOrgsResponse"
      tags: *a11
  /miniapp:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a12
        - MINIAPP
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MiniApp"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniApp"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a12
  /miniapp/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MiniApp"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a12
  /miniapp/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniApp"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a12
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MiniApp"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a12
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MiniApp"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a12
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiniApp"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a12
  /miniapp/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MiniAppAutoComplete"
        "500":
          description: Internal error
      tags: *a12
  /miniapp/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a12
  /documentnoformat:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a13
        - DOCUMENTNOFORMAT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentNoFormat"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentNoFormat"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a13
  /documentnoformat/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DocumentNoFormat"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a13
  /documentnoformat/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentNoFormat"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a13
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentNoFormat"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a13
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentNoFormat"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a13
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentNoFormat"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a13
  /documentnoformat/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DocumentNoFormatAutoComplete"
        "500":
          description: Internal error
      tags: *a13
  /documentnoformat/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a13
  /systemmessage:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a14
        - SYSTEMMESSAGE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemMessage"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemMessage"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a14
  /systemmessage/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SystemMessage"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a14
  /systemmessage/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemMessage"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a14
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemMessage"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a14
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemMessage"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a14
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemMessage"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a14
  /systemmessage/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SystemMessageAutoComplete"
        "500":
          description: Internal error
      tags: *a14
  /systemmessage/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a14
  /customfield:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a15
        - CUSTOMFIELD
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomField"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomField"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a15
  /customfield/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomField"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a15
  /customfield/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomField"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a15
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomField"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a15
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomField"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a15
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomField"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a15
  /customfield/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomFieldAutoComplete"
        "500":
          description: Internal error
      tags: *a15
  /customfield/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a15
  /queuejob:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a16
        - QUEUEJOB
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueueJob"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueueJob"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a16
  /queuejob/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QueueJob"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a16
  /queuejob/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueueJob"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a16
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueueJob"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a16
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueueJob"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a16
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueueJob"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a16
  /queuejob/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QueueJobAutoComplete"
        "500":
          description: Internal error
      tags: *a16
  /queuejob/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a16
  /webhook:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a17
        - WEBHOOK
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Webhook"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a17
  /webhook/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Webhook"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a17
  /webhook/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a17
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Webhook"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a17
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Webhook"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a17
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a17
  /webhook/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WebhookAutoComplete"
        "500":
          description: Internal error
      tags: *a17
  /webhook/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a17
  /academysession:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a18
        - ACADEMYSESSION
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcademySession"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademySession"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a18
  /academysession/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AcademySession"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a18
  /academysession/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademySession"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a18
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcademySession"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a18
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcademySession"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a18
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademySession"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a18
  /academysession/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AcademySessionAutoComplete"
        "500":
          description: Internal error
      tags: *a18
  /academysession/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a18
  /academysessionclassgenerator:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a19
        - ACADEMYSESSIONCLASSGENERATOR
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcademySessionClassGenerator"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademySessionClassGenerator"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a19
  /academysessionclassgenerator/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AcademySessionClassGenerator"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a19
  /academysessionclassgenerator/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademySessionClassGenerator"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a19
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcademySessionClassGenerator"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a19
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcademySessionClassGenerator"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a19
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademySessionClassGenerator"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a19
  /academysessionclassgenerator/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AcademySessionClassGeneratorAutoComplete"
        "500":
          description: Internal error
      tags: *a19
  /academysessionclassgenerator/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a19
  /accounttransaction:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a20
        - ACCOUNTTRANSACTION
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountTransaction"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountTransaction"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a20
  /accounttransaction/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountTransaction"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a20
  /accounttransaction/fulltextsearch:
    post:
      operationId: runFullTextSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextSearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountTransaction"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a20
  /accounttransaction/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountTransaction"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a20
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountTransaction"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a20
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountTransaction"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a20
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountTransaction"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a20
  /accounttransaction/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountTransactionAutoComplete"
        "500":
          description: Internal error
      tags: *a20
  /accounttransaction/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a20
  /actionhistory:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a21
        - ACTIONHISTORY
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActionHistory"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionHistory"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a21
  /actionhistory/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ActionHistory"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a21
  /actionhistory/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionHistory"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a21
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActionHistory"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a21
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActionHistory"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a21
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionHistory"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a21
  /actionhistory/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ActionHistoryAutoComplete"
        "500":
          description: Internal error
      tags: *a21
  /actionhistory/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a21
  /agent:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a22
        - AGENT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Agent"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a22
  /agent/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Agent"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a22
  /agent/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a22
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Agent"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a22
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Agent"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a22
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a22
  /agent/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AgentAutoComplete"
        "500":
          description: Internal error
      tags: *a22
  /agent/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a22
  /announcement:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a23
        - ANNOUNCEMENT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Announcement"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Announcement"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a23
  /announcement/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Announcement"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a23
  /announcement/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Announcement"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a23
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Announcement"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a23
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Announcement"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a23
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Announcement"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a23
  /announcement/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnnouncementAutoComplete"
        "500":
          description: Internal error
      tags: *a23
  /announcement/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a23
  /announcement/{id}/set-draft:
    post:
      operationId: AnnouncementController_setStatusDraft
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a23
  /announcement/{id}/set-void:
    post:
      operationId: AnnouncementController_setStatusVoid
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a23
  /announcement/{id}/set-confirm:
    post:
      operationId: AnnouncementController_setStatusConfirm
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a23
  /announcementtype:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a24
        - ANNOUNCEMENTTYPE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnnouncementType"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnouncementType"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a24
  /announcementtype/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnnouncementType"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a24
  /announcementtype/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnouncementType"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a24
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnnouncementType"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a24
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnnouncementType"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a24
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnouncementType"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a24
  /announcementtype/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnnouncementTypeAutoComplete"
        "500":
          description: Internal error
      tags: *a24
  /announcementtype/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a24
  /appintegration:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a25
        - APPINTEGRATION
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppIntegration"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppIntegration"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a25
  /appintegration/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AppIntegration"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a25
  /appintegration/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppIntegration"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a25
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppIntegration"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a25
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppIntegration"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a25
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppIntegration"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a25
  /appintegration/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AppIntegrationAutoComplete"
        "500":
          description: Internal error
      tags: *a25
  /appintegration/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a25
  /appintegrationlog:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a26
        - APPINTEGRATIONLOG
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppIntegrationLog"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppIntegrationLog"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a26
  /appintegrationlog/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AppIntegrationLog"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a26
  /appintegrationlog/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppIntegrationLog"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a26
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppIntegrationLog"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a26
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppIntegrationLog"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a26
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppIntegrationLog"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a26
  /appintegrationlog/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AppIntegrationLogAutoComplete"
        "500":
          description: Internal error
      tags: *a26
  /appintegrationlog/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a26
  /appuserannouncementview:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a27
        - APPUSERANNOUNCEMENTVIEW
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppUserAnnouncementView"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppUserAnnouncementView"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a27
  /appuserannouncementview/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AppUserAnnouncementView"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a27
  /appuserannouncementview/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppUserAnnouncementView"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a27
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppUserAnnouncementView"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a27
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppUserAnnouncementView"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a27
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppUserAnnouncementView"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a27
  /appuserannouncementview/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AppUserAnnouncementViewAutoComplete"
        "500":
          description: Internal error
      tags: *a27
  /appuserannouncementview/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a27
  /area:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a28
        - AREA
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Area"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Area"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a28
  /area/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Area"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a28
  /area/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Area"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a28
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Area"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a28
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Area"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a28
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Area"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a28
  /area/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AreaAutoComplete"
        "500":
          description: Internal error
      tags: *a28
  /area/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a28
  /billingschedule:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a29
        - BILLINGSCHEDULE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingSchedule"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingSchedule"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a29
  /billingschedule/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingSchedule"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a29
  /billingschedule/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingSchedule"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a29
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingSchedule"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a29
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingSchedule"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a29
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingSchedule"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a29
  /billingschedule/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingScheduleAutoComplete"
        "500":
          description: Internal error
      tags: *a29
  /billingschedule/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a29
  /category:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a30
        - CATEGORY
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a30
  /category/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a30
  /category/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a30
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a30
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a30
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a30
  /category/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoryAutoComplete"
        "500":
          description: Internal error
      tags: *a30
  /category/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a30
  /creditnote:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a31
        - CREDITNOTE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditNote"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditNote"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a31
  /creditnote/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CreditNote"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a31
  /creditnote/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditNote"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a31
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditNote"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a31
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditNote"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a31
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditNote"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a31
  /creditnote/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CreditNoteAutoComplete"
        "500":
          description: Internal error
      tags: *a31
  /creditnote/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a31
  /creditnote/{id}/set-draft:
    post:
      operationId: CreditNoteController_setStatusDraft
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a31
  /creditnote/{id}/set-void:
    post:
      operationId: CreditNoteController_setStatusVoid
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a31
  /creditnote/{id}/set-confirm:
    post:
      operationId: CreditNoteController_setStatusConfirm
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a31
  /customizeprintformat:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a32
        - CUSTOMIZEPRINTFORMAT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomizePrintFormat"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomizePrintFormat"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a32
  /customizeprintformat/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomizePrintFormat"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a32
  /customizeprintformat/fulltextsearch:
    post:
      operationId: runFullTextSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextSearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomizePrintFormat"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a32
  /customizeprintformat/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomizePrintFormat"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a32
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomizePrintFormat"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a32
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomizePrintFormat"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a32
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomizePrintFormat"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a32
  /customizeprintformat/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CustomizePrintFormatAutoComplete"
        "500":
          description: Internal error
      tags: *a32
  /customizeprintformat/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a32
  /mobileappuser:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a33
        - MOBILEAPPUSER
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MobileAppUser"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MobileAppUser"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a33
  /mobileappuser/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MobileAppUser"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a33
  /mobileappuser/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MobileAppUser"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a33
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MobileAppUser"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a33
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MobileAppUser"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a33
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MobileAppUser"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a33
  /mobileappuser/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MobileAppUserAutoComplete"
        "500":
          description: Internal error
      tags: *a33
  /mobileappuser/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a33
  /enrollment:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a34
        - ENROLLMENT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enrollment"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enrollment"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a34
  /enrollment/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Enrollment"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a34
  /enrollment/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enrollment"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a34
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enrollment"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a34
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enrollment"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a34
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Enrollment"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a34
  /enrollment/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EnrollmentAutoComplete"
        "500":
          description: Internal error
      tags: *a34
  /enrollment/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a34
  /holiday:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a35
        - HOLIDAY
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Holiday"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Holiday"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a35
  /holiday/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Holiday"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a35
  /holiday/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Holiday"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a35
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Holiday"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a35
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Holiday"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a35
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Holiday"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a35
  /holiday/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HolidayAutoComplete"
        "500":
          description: Internal error
      tags: *a35
  /holiday/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a35
  /invoice:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a36
        - INVOICE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoice"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a36
  /invoice/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invoice"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a36
  /invoice/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a36
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoice"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a36
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoice"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a36
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoice"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a36
  /invoice/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InvoiceAutoComplete"
        "500":
          description: Internal error
      tags: *a36
  /invoice/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a36
  /invoice/{id}/set-draft:
    post:
      operationId: InvoiceController_setStatusDraft
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a36
  /invoice/{id}/set-void:
    post:
      operationId: InvoiceController_setStatusVoid
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a36
  /invoice/{id}/set-confirm:
    post:
      operationId: InvoiceController_setStatusConfirm
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a36
  /level:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a37
        - LEVEL
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Level"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Level"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a37
  /level/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Level"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a37
  /level/fulltextsearch:
    post:
      operationId: runFullTextSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextSearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Level"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a37
  /level/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Level"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a37
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Level"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a37
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Level"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a37
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Level"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a37
  /level/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LevelAutoComplete"
        "500":
          description: Internal error
      tags: *a37
  /level/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a37
  /mobileappmessage:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a38
        - MOBILEAPPMESSAGE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MobileAppMessage"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MobileAppMessage"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a38
  /mobileappmessage/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MobileAppMessage"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a38
  /mobileappmessage/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MobileAppMessage"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a38
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MobileAppMessage"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a38
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MobileAppMessage"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a38
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MobileAppMessage"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a38
  /mobileappmessage/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MobileAppMessageAutoComplete"
        "500":
          description: Internal error
      tags: *a38
  /mobileappmessage/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a38
  /parent:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a39
        - PARENT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Parent"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Parent"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a39
  /parent/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Parent"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a39
  /parent/fulltextsearch:
    post:
      operationId: runFullTextSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextSearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Parent"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a39
  /parent/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Parent"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a39
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Parent"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a39
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Parent"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a39
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Parent"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a39
  /parent/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ParentAutoComplete"
        "500":
          description: Internal error
      tags: *a39
  /parent/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a39
  /payment:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a40
        - PAYMENT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a40
  /payment/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payment"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a40
  /payment/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a40
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a40
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a40
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a40
  /payment/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PaymentAutoComplete"
        "500":
          description: Internal error
      tags: *a40
  /payment/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a40
  /payment/{id}/set-draft:
    post:
      operationId: PaymentController_setStatusDraft
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a40
  /payment/{id}/set-void:
    post:
      operationId: PaymentController_setStatusVoid
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a40
  /payment/{id}/set-confirm:
    post:
      operationId: PaymentController_setStatusConfirm
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a40
  /paymentmethod:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a41
        - PAYMENTMETHOD
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethod"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethod"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a41
  /paymentmethod/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PaymentMethod"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a41
  /paymentmethod/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethod"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a41
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethod"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a41
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentMethod"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a41
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentMethod"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a41
  /paymentmethod/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PaymentMethodAutoComplete"
        "500":
          description: Internal error
      tags: *a41
  /paymentmethod/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a41
  /product:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a42
        - PRODUCT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a42
  /product/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a42
  /product/fulltextsearch:
    post:
      operationId: runFullTextSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextSearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a42
  /product/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a42
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a42
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a42
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a42
  /product/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAutoComplete"
        "500":
          description: Internal error
      tags: *a42
  /product/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a42
  /productpackage:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a43
        - PRODUCTPACKAGE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductPackage"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPackage"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a43
  /productpackage/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPackage"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a43
  /productpackage/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPackage"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a43
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductPackage"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a43
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductPackage"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a43
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPackage"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a43
  /productpackage/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPackageAutoComplete"
        "500":
          description: Internal error
      tags: *a43
  /productpackage/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a43
  /punchcard:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a44
        - PUNCHCARD
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PunchCard"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PunchCard"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a44
  /punchcard/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PunchCard"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a44
  /punchcard/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PunchCard"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a44
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PunchCard"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a44
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PunchCard"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a44
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PunchCard"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a44
  /punchcard/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PunchCardAutoComplete"
        "500":
          description: Internal error
      tags: *a44
  /punchcard/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a44
  /race:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a45
        - RACE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Race"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Race"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a45
  /race/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Race"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a45
  /race/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Race"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a45
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Race"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a45
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Race"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a45
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Race"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a45
  /race/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RaceAutoComplete"
        "500":
          description: Internal error
      tags: *a45
  /race/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a45
  /refund:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a46
        - REFUND
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Refund"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refund"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a46
  /refund/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Refund"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a46
  /refund/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refund"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a46
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Refund"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a46
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Refund"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a46
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refund"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a46
  /refund/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RefundAutoComplete"
        "500":
          description: Internal error
      tags: *a46
  /refund/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a46
  /refund/{id}/set-draft:
    post:
      operationId: RefundController_setStatusDraft
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a46
  /refund/{id}/set-void:
    post:
      operationId: RefundController_setStatusVoid
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a46
  /refund/{id}/set-confirm:
    post:
      operationId: RefundController_setStatusConfirm
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Document data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "201":
          description: ""
      tags: *a46
  /refundtype:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a47
        - REFUNDTYPE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundType"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefundType"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a47
  /refundtype/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RefundType"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a47
  /refundtype/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefundType"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a47
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundType"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a47
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundType"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a47
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefundType"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a47
  /refundtype/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RefundTypeAutoComplete"
        "500":
          description: Internal error
      tags: *a47
  /refundtype/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a47
  /religion:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a48
        - RELIGION
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Religion"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Religion"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a48
  /religion/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Religion"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a48
  /religion/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Religion"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a48
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Religion"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a48
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Religion"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a48
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Religion"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a48
  /religion/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReligionAutoComplete"
        "500":
          description: Internal error
      tags: *a48
  /religion/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a48
  /room:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a49
        - ROOM
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Room"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a49
  /room/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Room"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a49
  /room/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a49
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Room"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a49
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Room"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a49
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a49
  /room/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoomAutoComplete"
        "500":
          description: Internal error
      tags: *a49
  /room/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a49
  /roomtype:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a50
        - ROOMTYPE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomType"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomType"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a50
  /roomtype/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoomType"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a50
  /roomtype/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomType"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a50
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomType"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a50
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomType"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a50
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoomType"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a50
  /roomtype/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoomTypeAutoComplete"
        "500":
          description: Internal error
      tags: *a50
  /roomtype/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a50
  /schedule:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a51
        - SCHEDULE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Schedule"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a51
  /schedule/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Schedule"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a51
  /schedule/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a51
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Schedule"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a51
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Schedule"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a51
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a51
  /schedule/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScheduleAutoComplete"
        "500":
          description: Internal error
      tags: *a51
  /schedule/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a51
  /scheduleattendance:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a52
        - SCHEDULEATTENDANCE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleAttendance"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleAttendance"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a52
  /scheduleattendance/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScheduleAttendance"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a52
  /scheduleattendance/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleAttendance"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a52
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleAttendance"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a52
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleAttendance"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a52
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleAttendance"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a52
  /scheduleattendance/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScheduleAttendanceAutoComplete"
        "500":
          description: Internal error
      tags: *a52
  /scheduleattendance/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a52
  /school:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a53
        - SCHOOL
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/School"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/School"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a53
  /school/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/School"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a53
  /school/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/School"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a53
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/School"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a53
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/School"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a53
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/School"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a53
  /school/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SchoolAutoComplete"
        "500":
          description: Internal error
      tags: *a53
  /school/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a53
  /stopenrollment:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a54
        - STOPENROLLMENT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopEnrollment"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopEnrollment"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a54
  /stopenrollment/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StopEnrollment"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a54
  /stopenrollment/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopEnrollment"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a54
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopEnrollment"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a54
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopEnrollment"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a54
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopEnrollment"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a54
  /stopenrollment/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StopEnrollmentAutoComplete"
        "500":
          description: Internal error
      tags: *a54
  /stopenrollment/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a54
  /stopreason:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a55
        - STOPREASON
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopReason"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopReason"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a55
  /stopreason/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StopReason"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a55
  /stopreason/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopReason"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a55
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopReason"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a55
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopReason"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a55
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopReason"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a55
  /stopreason/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StopReasonAutoComplete"
        "500":
          description: Internal error
      tags: *a55
  /stopreason/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a55
  /student:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a56
        - STUDENT
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a56
  /student/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a56
  /student/fulltextsearch:
    post:
      operationId: runFullTextSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextSearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a56
  /student/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a56
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a56
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a56
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a56
  /student/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentAutoComplete"
        "500":
          description: Internal error
      tags: *a56
  /student/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a56
  /studentdescription:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a57
        - STUDENTDESCRIPTION
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentDescription"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentDescription"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a57
  /studentdescription/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentDescription"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a57
  /studentdescription/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentDescription"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a57
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentDescription"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a57
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentDescription"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a57
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentDescription"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a57
  /studentdescription/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentDescriptionAutoComplete"
        "500":
          description: Internal error
      tags: *a57
  /studentdescription/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a57
  /studentgroup:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a58
        - STUDENTGROUP
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentGroup"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentGroup"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a58
  /studentgroup/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentGroup"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a58
  /studentgroup/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentGroup"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a58
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentGroup"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a58
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentGroup"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a58
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentGroup"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a58
  /studentgroup/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentGroupAutoComplete"
        "500":
          description: Internal error
      tags: *a58
  /studentgroup/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a58
  /studentsource:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a59
        - STUDENTSOURCE
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentSource"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentSource"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a59
  /studentsource/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentSource"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a59
  /studentsource/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentSource"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a59
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentSource"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a59
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentSource"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a59
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentSource"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a59
  /studentsource/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentSourceAutoComplete"
        "500":
          description: Internal error
      tags: *a59
  /studentsource/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a59
  /studentsummary:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a60
        - STUDENTSUMMARY
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentSummary"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentSummary"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a60
  /studentsummary/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentSummary"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a60
  /studentsummary/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentSummary"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a60
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentSummary"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a60
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentSummary"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a60
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentSummary"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a60
  /studentsummary/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentSummaryAutoComplete"
        "500":
          description: Internal error
      tags: *a60
  /studentsummary/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a60
  /teacher:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a61
        - TEACHER
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Teacher"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teacher"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a61
  /teacher/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Teacher"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a61
  /teacher/fulltextsearch:
    post:
      operationId: runFullTextSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextSearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Teacher"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a61
  /teacher/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teacher"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a61
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Teacher"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a61
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Teacher"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a61
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teacher"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a61
  /teacher/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeacherAutoComplete"
        "500":
          description: Internal error
      tags: *a61
  /teacher/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a61
  /teachergroup:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a62
        - TEACHERGROUP
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeacherGroup"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeacherGroup"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a62
  /teachergroup/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeacherGroup"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a62
  /teachergroup/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeacherGroup"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a62
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeacherGroup"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a62
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeacherGroup"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a62
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeacherGroup"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a62
  /teachergroup/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeacherGroupAutoComplete"
        "500":
          description: Internal error
      tags: *a62
  /teachergroup/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a62
  /tuitionclass:
    get:
      operationId: runDefault
      summary: ""
      description: Run default behavior like say hello
      parameters: []
      responses:
        "200":
          description: Sample 200 response
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Internal error
      tags: &a63
        - TUITIONCLASS
    post:
      operationId: runCreate
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TuitionClass"
      responses:
        "201":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TuitionClass"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a63
  /tuitionclass/search:
    post:
      operationId: runSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TuitionClass"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a63
  /tuitionclass/fulltextsearch:
    post:
      operationId: runFullTextSearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TextSearchBody"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TuitionClass"
        "400":
          description: bad request
        "500":
          description: internal error
      tags: *a63
  /tuitionclass/{id}:
    get:
      operationId: runFindOne
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Founds
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TuitionClass"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a63
    put:
      operationId: runUpdate
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TuitionClass"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a63
    patch:
      operationId: runPatch
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TuitionClass"
      responses:
        "200":
          description: success
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a63
    delete:
      operationId: runDelete
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TuitionClass"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a63
  /tuitionclass/autocomplete:
    post:
      operationId: autoComplete
      summary: ""
      description: retrieve array of {_id, code, name}
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TuitionClassAutoComplete"
        "500":
          description: Internal error
      tags: *a63
  /tuitionclass/bulk-patch:
    patch:
      operationId: runPatchMany
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchManyRequest"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManyResponse"
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a63
  /accounting/{systemType}/{docType}/createJE:
    post:
      operationId: runCreateJEinAccounting
      summary: ""
      description: run create a Journal Entry record in accounting system
      parameters:
        - name: systemType
          required: true
          in: path
          schema:
            type: string
        - name: docType
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: document ids
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "201":
          description: Success create JE
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinalResponse"
        "400":
          description: Invalid create JE
        "500":
          description: Fail to create JE
      tags: &a64
        - ACCOUNTING
  /accounting/{systemType}/{docType}/deleteJE:
    post:
      operationId: deleteJE
      summary: ""
      description: Delete JE record
      parameters:
        - name: systemType
          required: true
          in: path
          schema:
            type: string
        - name: docType
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: JE record deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinalResponse"
        "404":
          description: Record not found
        "500":
          description: Fail to delete JE record
      tags: *a64
  /accounting/{systemType}/{docType}/voidJE:
    post:
      operationId: voidJE
      summary: ""
      description: Void JE record
      parameters:
        - name: systemType
          required: true
          in: path
          schema:
            type: string
        - name: docType
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: JE record void
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinalResponse"
        "404":
          description: Record not found
        "500":
          description: Fail to void JE record
      tags: *a64
  /accounting/{docType}/{dateFrom}/{dateTo}:
    get:
      operationId: runSearchDocuments
      summary: ""
      parameters:
        - name: dateFrom
          required: true
          in: path
          schema:
            type: string
        - name: dateTo
          required: true
          in: path
          schema:
            type: string
        - name: docType
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get invoice/payment/credit note/refund by month
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillDocumentType"
      tags: *a64
  /enrollment-api/{id}/stop:
    patch:
      operationId: runStopEnrollment
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enrollment"
      responses:
        "200":
          description: stop student enrollment, prevent future attendance and invoice
          content:
            application/json:
              schema:
                type: string
      tags: &a65
        - ENROLLMENT
  /enrollment-api/{id}/restart:
    patch:
      operationId: runRestartEnrollment
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Enrollment"
      responses:
        "200":
          description:
            restart student enrollment, add back future attendance and billing
            schedule
          content:
            application/json:
              schema:
                type: string
      tags: *a65
  /enrollment-api/{id}/replace-class/{scheduleId}:
    patch:
      operationId: runReplaceClass
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: scheduleId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleAttendanceReplacement"
      responses:
        "200":
          description: replace enrollment for specific schedule to another schedule
          content:
            application/json:
              schema:
                type: string
      tags: *a65
  /enrollment-api/{id}/remove-replacement/{scheduleId}:
    patch:
      operationId: runRemoveClassReplacement
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: scheduleId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: remove replacement
          content:
            application/json:
              schema:
                type: string
      tags: *a65
  /enrollment-api/{id}/enrollment-schedules:
    get:
      operationId: runGetEnrollmentSchedules
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get enrollent class schedule and billing schedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnrollmentSchedules"
      tags: *a65
  /studentapi/parent-branches:
    get:
      operationId: getParentBranches
      summary: ""
      description: design for parent, list branch by parent email
      parameters: []
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentBranch"
        "500":
          description: Internal error
      tags: &a66
        - STUDENTAPI
  /studentapi/student-schedules:
    get:
      operationId: getStudentSchedules
      summary: ""
      description: obtain student schedules
      parameters: []
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentApiSchedule"
        "500":
          description: Internal error
      tags: *a66
  /studentapi/{studentId}/student-one-schedules:
    get:
      operationId: getOneStudentSchedules
      summary: ""
      description: obtain student schedules
      parameters:
        - name: studentId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentApiSchedule"
        "500":
          description: Internal error
      tags:
        - STUDENTAPI
  /studentapi/resourceversion:
    get:
      operationId: getResourceVersion
      summary: ""
      description: obtain resource version
      parameters: []
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Internal error
      tags: *a66
  /tutorapi/tutor-branches:
    get:
      operationId: getTutorBranches
      summary: ""
      description: design for tutor, list branch by parent email
      parameters: []
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserBranch"
        "500":
          description: Internal error
      tags: &a67
        - TUTORAPI
  /tutorapi/getStudentEnrollBySearch:
    post:
      operationId: runGetStudentEnrollBySearch
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
      responses:
        "200":
          description: get student enrollment by search
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TutorAttendanceSearch"
      tags: *a67
  /tutorapi/searchStudent:
    post:
      operationId: searchStudent
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
      responses:
        "200":
          description: search student
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchStudent"
      tags: *a67
  /tutorapi/attendance/{id}:
    put:
      operationId: runUpdateAttendance
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TutorAttendanceUpdate"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: string
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a67
  /tutorapi/attendanceRemark/{id}:
    put:
      operationId: runUpdateAttendanceRemark
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorAttendanceRemarkUpdate"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: string
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a67
  /tutorapi/scheduleLessonPlan/{id}:
    put:
      operationId: runUpdateScheduleLessonPlan
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TutorScheduleLessonPlanUpdate"
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: string
        "404":
          description: Document not found
        "500":
          description: Internal error
      tags: *a67
  /tutorapi/attendance/{scheduleId}:
    get:
      operationId: getTutorAttendance
      summary: ""
      description: get attendance detail by scheduleId
      parameters:
        - name: scheduleId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TutorScheduleAttendance"
        "500":
          description: Internal error
      tags: *a67
  /photo/migrate-kvp-to-cdn:
    post:
      operationId: runMigrateKeyValuePairToCDN
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Get schedules for 1 month
          content:
            application/json:
              schema:
                type: string
      tags:
        - PHOTO
  /onlinepayment/request-online-payment:
    post:
      operationId: requestOnlinePayment
      summary: ""
      description: Request online payment for a student
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestOnlinePaymentBody"
      responses:
        "201":
          description: Success request online payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestOnlinePaymentResponse"
        "400":
          description: Invalid request online payment
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Fail to request online payment
          content:
            application/json:
              schema:
                type: string
      tags: &a68
        - onlinepayment
  /onlinepayment/validate-online-payment/{onlinePaymentId}:
    post:
      operationId: validateOnlinePayment
      summary: ""
      description: Validate online payment for a student
      parameters:
        - name: onlinePaymentId
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: Validate online payment with valid data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateOnlinePaymentResponse"
        "404":
          description: Online payment not found
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Fail to validate online payment
          content:
            application/json:
              schema:
                type: string
      tags: *a68
  /onlinepayment/get-online-payment:
    post:
      operationId: getOnlinePayment
      summary: ""
      description: Get online payment data for monitoring
      parameters: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OnlinePaymentFilter"
      responses:
        "201":
          description: Validate online payment with valid data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OnlineMonitoringData"
      tags: *a68
  /onlinepayment/check-online-payment-status/{id}:
    post:
      operationId: checkOnlinePaymentStatus
      summary: ""
      description: Check online payment status
      parameters:
        - name: id
          required: true
          in: path
          description: The online payment ID
          schema:
            type: string
      responses:
        "200":
          description: Online payment status retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnlinePaymentData"
      tags: *a68
  /payment-api/totalcollection/{month}:
    get:
      operationId: runTotalPaymentAmount
      summary: ""
      parameters:
        - name: month
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get total collection by month
          content:
            application/json:
              schema:
                type: number
      tags: &a69
        - PAYMENT
  /payment-api/dailycollectio-bypaymenttype/{date}:
    get:
      operationId: runGetDailyCollectionByPaymentType
      summary: ""
      parameters:
        - name: date
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get total collection by month
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CodeLabelValue"
      tags: *a69
  /payment-api/payment/recreate-online-payment-receipt:
    post:
      operationId: runRecreateOnlinePaymentReceipt
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Recreate Online Payment Receipt
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
      tags: *a69
  /payment-api/payment/create-online-payment-receipt:
    post:
      operationId: runCreateOnlinePaymentReceipt
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Create Online Payment Receipt
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
      tags: *a69
  /payment-api/{id}/print/{formatId}:
    get:
      operationId: runPrint
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: formatId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: obtain base64 pdf
          content:
            application/json:
              schema:
                type: string
      tags: *a69
  /einvoice/filename:
    get:
      operationId: runGetFileName
      summary: ""
      parameters: []
      responses:
        "200":
          description: get einvoice filename
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MicroFrontendAssetsResponse"
      tags: &a70
        - EINVOICE
  /einvoice/summary/{document}/{id}:
    get:
      operationId: runGetEinvoiceSummary
      summary: ""
      parameters:
        - name: document
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get einvoice summary
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EinvoiceRecordSummary"
      tags: *a70
  /einvoice/{id}/{type}:
    get:
      operationId: runGetURL
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: type
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get einvoice LHDN record url
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EinvoiceRecordURLResponse"
      tags: *a70
  /einvoice/dashboard/{datefrom}/{dateto}:
    get:
      operationId: runGetDashboardDetails
      summary: ""
      parameters:
        - name: datefrom
          required: true
          in: path
          schema:
            type: string
        - name: dateto
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get einvoice dashboard
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EinvoiceDashboardDataList"
      tags: *a70
  /einvoice/dashboard/docList/{type}:
    post:
      operationId: runGetDashboardDocList
      summary: ""
      parameters:
        - name: type
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: get einvoice dashboard document list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EinvoiceDashboardDocList"
      tags: *a70
  /einvoice/dashboard/synchronized:
    post:
      operationId: runGetDashboardDocSync
      summary: ""
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EinvoiceDashboardSync"
      responses:
        "200":
          description: get einvoice dashboard document synchronized
      tags: *a70
  /einvoice/cancelEinvoice:
    post:
      operationId: runCancelEinvoice
      summary: ""
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EinvoiceCancelRequest"
      responses:
        "200":
          description: cancel eInvoice
      tags: *a70
  /tenant-api/{id}/getOutstandingSetting:
    get:
      operationId: runGetOutstandingSetting
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get outstanding invoice
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutstandingSetting"
      tags: &a71
        - TENANT
  /tenant-api/{id}/saveOutstandingSetting:
    post:
      operationId: runSaveOutstandingSetting
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutstandingSettingResponse"
      responses:
        "200":
          description: Save outstanding setting
          content:
            application/json:
              schema:
                type: string
      tags: *a71
  /organization-api/{id}/photo:
    get:
      operationId: runGetPhoto
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get Organization photo
          content:
            image/png:
              schema:
                type: string
                format: binary
      tags: &a72
        - ORGANIZATION
    post:
      operationId: runUploadPhoto
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadPhoto"
      responses:
        "200":
          description: Upload Organization photo
          content:
            application/json:
              schema:
                type: string
      tags: *a72
  /branch-api/{id}/photo:
    get:
      operationId: runGetPhoto
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get Branch photo
          content:
            image/png:
              schema:
                type: string
                format: binary
      tags: &a73
        - BRANCH
    post:
      operationId: runUploadPhoto
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadPhoto"
      responses:
        "200":
          description: Upload Branch photo
          content:
            application/json:
              schema:
                type: string
      tags: *a73
  /documentnoformat-api/listdocformats/{doctype}:
    get:
      operationId: runListDocFormats
      summary: ""
      parameters:
        - name: doctype
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get list of document format for 1 doctype
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DocumentNoFormat"
      tags:
        - DOCUMENTNOFORMAT
  /systemmessage-api/{id}/read:
    get:
      operationId: runReadmsg
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get message content and mark read
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemMessage"
      tags: &a74
        - SYSTEMMESSAGE
  /systemmessage-api/msglist:
    get:
      operationId: runMsglist
      summary: ""
      parameters: []
      responses:
        "200":
          description: get message content and mark read
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SystemMessage"
      tags: *a74
  /webhook-api/{id}/histories:
    get:
      operationId: runGetHistories
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get webhook execute histories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WebhookLog"
      tags:
        - WEBHOOK
  /academysession-api/{id}/get-tuition-classes:
    get:
      operationId: runGetTuitionClassList
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get list of classes of this academy session
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TuitionClassWithSummary"
      tags: &a75
        - ACADEMYSESSION
  /academysession-api/prepare-generate-classes:
    get:
      operationId: runPrepareClassGenerator
      summary: ""
      parameters: []
      responses:
        "200":
          description: prepare draft class generate record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademySessionClassGenerator"
      tags: *a75
  /academysession-api/update-class-generator:
    put:
      operationId: runUpdateClassGenerator
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcademySessionClassGenerator"
      responses:
        "200":
          description: update class generator record but not process it
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcademySessionClassGenerator"
      tags: *a75
  /academysession-api/generate-classes:
    post:
      operationId: runGenerateClasses
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcademySessionClassGenerator"
      responses:
        "200":
          description: duplicate tuition classes from previous academy session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueueJobProducerResponse"
      tags: *a75
  /academysession-api/delete-generated-class/{generateId}:
    delete:
      operationId: runReverseClasses
      summary: ""
      parameters:
        - name: generateId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: delete generated classes, schedules and enrollment
          content:
            application/json:
              schema:
                type: string
      tags: *a75
  /academysession-api/history:
    get:
      operationId: runGetHistories
      summary: ""
      parameters: []
      responses:
        "200":
          description: get generate histories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClassGenerateHistory"
      tags: *a75
  /accounttransaction-api/outstanding-by-students:
    get:
      operationId: runOutstandingByStudents
      summary: ""
      parameters: []
      responses:
        "200":
          description: get Outstanding amount by students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OutstandingByStudent"
      tags:
        - ACCOUNTTRANSACTION
  /announcement-api/announcement:
    get:
      operationId: runGetUserAnnouncement
      summary: ""
      parameters: []
      responses:
        "200":
          description: Get announcement by date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnnouncementResponse"
      tags: &a76
        - ANNOUNCEMENT
  /announcement-api/otherannouncement:
    get:
      operationId: runGetUserOtherAnnouncement
      summary: ""
      parameters: []
      responses:
        "200":
          description: Get other announcement by date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnnouncementResponse"
      tags: *a76
  /announcement-api/{id}/announcement:
    get:
      operationId: runGetUserOneAnnouncement
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get announcement by id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnouncementResponse"
      tags: *a76
  /announcement-api/{id}/readannouncement:
    post:
      operationId: runReadAnnouncement
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: read announcement
          content:
            application/json:
              schema:
                type: string
      tags: *a76
  /announcement-api/getinbox:
    get:
      operationId: runGetInboxList
      summary: ""
      parameters: []
      responses:
        "200":
          description: Get other announcement by date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SystemInboxResponse"
      tags: *a76
  /announcement-api/{type}/{id}/readInbox:
    post:
      operationId: runReadInbox
      summary: ""
      parameters:
        - name: type
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: read Inbox
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemInboxResponse"
      tags: *a76
  /announcement-api/{id}/attachment:
    post:
      operationId: runUploadAttachment
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyValue"
      responses:
        "200":
          description: post attachment in base64
          content:
            application/json:
              schema:
                type: string
      tags: *a76
    get:
      operationId: runGetAttachment
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: obtain attachment base64
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      tags: *a76
  /appintegration-api/branch/{appId}:
    get:
      operationId: runRunGetOrgIntegrationData
      summary: ""
      parameters:
        - name: appId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get integration data for branch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppIntegration"
      tags: &a77
        - APPINTEGRATION
  /appintegration-api/{appId}/{action}:
    get:
      operationId: runUpdateIntegrationStatus
      summary: ""
      parameters:
        - name: appId
          required: true
          in: path
          schema:
            type: string
        - name: action
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: update app integration status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppIntegration"
      tags: *a77
  /category-api/union-exist:
    post:
      operationId: runCheckUniqueKeyExist
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Check multiple code exist or not.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UniqueKeyExistResponse"
      tags:
        - CATEGORY
  /creditnote-api/{id}/print/{formatId}:
    get:
      operationId: runPrint
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: formatId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: obtain base64 pdf
          content:
            application/json:
              schema:
                type: string
      tags:
        - CREDITNOTE
  /mobileappuser-api/saveMessageToken:
    post:
      operationId: runSaveMessageToken
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenCredential"
      responses:
        "200":
          description: Save message token
          content:
            application/json:
              schema:
                type: string
      tags: &a78
        - MOBILEAPPUSER
  /mobileappuser-api/removeMessageToken:
    post:
      operationId: runRemoveMessageToken
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenCredential"
      responses:
        "200":
          description: remove message token
          content:
            application/json:
              schema:
                type: string
      tags: *a78
  /holiday-api/holidays/{month}:
    get:
      operationId: runGetHolidays
      summary: ""
      parameters:
        - name: month
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description:
            Get all holidays in 1 one, separate individual date as string {_id,
            date, holidayName}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Holiday"
      tags: &a79
        - HOLIDAY
  /holiday-api/isholiday/{date}:
    get:
      operationId: runIsHoliday
      summary: ""
      parameters:
        - name: date
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: check is holiday, result true/false
          content:
            application/json:
              schema:
                type: boolean
      tags: *a79
  /invoice-api/totalsales/{month}:
    get:
      operationId: runTotalInvoiceAmount
      summary: ""
      parameters:
        - name: month
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get total sales by month
          content:
            application/json:
              schema:
                type: number
      tags: &a80
        - INVOICE
  /invoice-api/prepare-billing:
    post:
      operationId: runPrepareBilling
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DateRangeFilter"
      responses:
        "200":
          description: prepare billing date within date-range like 2025-01-01|2025-01-31
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillSummaryByStudent"
      tags: *a80
  /invoice-api/generate-bulk-invoice:
    post:
      operationId: runGenerateBulkInvoice
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateBulkInvoice"
      responses:
        "200":
          description: generate bulk invoice
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueueJobProducerResponse"
      tags: *a80
  /invoice-api/generate-history:
    get:
      operationId: runGenerateHistory
      summary: ""
      parameters: []
      responses:
        "200":
          description: get generate histories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BulkGenerateInvoiceHistory"
      tags: *a80
  /invoice-api/{id}/print/{formatId}:
    get:
      operationId: runPrint
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: formatId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: obtain base64 pdf
          content:
            application/json:
              schema:
                type: string
      tags: *a80
  /level-api/union-exist:
    post:
      operationId: runCheckUniqueKeyExist
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Check multiple level code exist or not.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UniqueKeyExistResponse"
      tags: &a81
        - LEVEL
  /level-api/search-with-relation:
    post:
      operationId: runSearchWithRelation
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchLevelWithRelations"
      responses:
        "200":
          description: Search level with product info.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LevelWithRelation"
      tags: *a81
  /mobileappmessage-api/{id}/read:
    get:
      operationId: runReadmsg
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get message content and mark read
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemMessage"
      tags: &a82
        - MOBILEAPPMESSAGE
  /mobileappmessage-api/msglist:
    get:
      operationId: runMsglist
      summary: ""
      parameters: []
      responses:
        "200":
          description: get message content and mark read
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SystemMessage"
      tags: *a82
  /parent-api/imports:
    post:
      operationId: runImportParents
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ImportParent"
      responses:
        "200":
          description: Bulk insert parent profile.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ImportErrorMessage"
      tags: &a83
        - PARENT
  /parent-api/getChildren/{id}:
    get:
      operationId: runGetStudentDetails
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get children details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
      tags: *a83
  /paymentmethod-api/noIsolationSearch:
    get:
      operationId: runAccountingPaymentMethod
      summary: ""
      parameters: []
      responses:
        "200":
          description: get all payment method in branch
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PaymentMethod"
      tags:
        - PAYMENTMETHOD
  /product-api/imports:
    post:
      operationId: runImportProducts
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ImportProduct"
      responses:
        "200":
          description: Bulk insert product profile.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ImportErrorMessage"
      tags:
        - PRODUCT
  /race-api/union-exist:
    post:
      operationId: runCheckUniqueKeyExist
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Check multiple code exist or not.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UniqueKeyExistResponse"
      tags:
        - RACE
  /refund-api/{id}/print/{formatId}:
    get:
      operationId: runPrint
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: formatId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: obtain base64 pdf
          content:
            application/json:
              schema:
                type: string
      tags:
        - REFUND
  /religion-api/union-exist:
    post:
      operationId: runCheckUniqueKeyExist
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Check multiple code exist or not.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UniqueKeyExistResponse"
      tags:
        - RELIGION
  /schedule-api/schedules-month/{yearmonth}:
    post:
      operationId: runSearchSchedulesByMonth
      summary: ""
      parameters:
        - name: yearmonth
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Get schedules for 1 month
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScheduleListItem"
      tags: &a84
        - SCHEDULE
  /schedule-api/date/{date}:
    get:
      operationId: runGetScheduleByDay
      summary: ""
      parameters:
        - name: date
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get schedule list by day
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScheduleListItem"
      tags: *a84
  /schedule-api/{id}/info:
    get:
      operationId: runGetScheduleInfo
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get schedule students
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attendance"
      tags: *a84
  /schedule-api/{id}/attendance:
    put:
      operationId: runUpdateAttendance
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Attendance"
      responses:
        "200":
          description: update attendance
          content:
            application/json:
              schema:
                type: string
      tags: *a84
  /schedule-api/student-attendance/{date}:
    get:
      operationId: runGetDailyAbsendStudents
      summary: ""
      parameters:
        - name: date
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: absend students from attendance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Attendance"
      tags: *a84
  /schedule-api/attendanceweek:
    get:
      operationId: runGetAttendanceByWeek
      summary: ""
      parameters: []
      responses:
        "200":
          description: Get Attendance Rate By Week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttendanceReport"
      tags: *a84
  /schedule-api/inactive-schedules:
    post:
      operationId: runInActiveSchedules
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: set inactive to schedule ids
          content:
            application/json:
              schema:
                type: string
      tags: *a84
  /schedule-api/activate-schedules:
    post:
      operationId: runActivateSchedules
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: set active to schedule ids
          content:
            application/json:
              schema:
                type: string
      tags: *a84
  /schedule-api/attendance-check-list:
    post:
      operationId: runPrintAttendance
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrintAttendanceFilter"
      responses:
        "200":
          description: set active to schedule ids
          content:
            application/json:
              schema:
                type: string
      tags: *a84
  /schedule-api/search-with-relation:
    post:
      operationId: runSearchWithRelation
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchScheduleWithRelations"
      responses:
        "200":
          description: Search schedule with tuition class info.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScheduleWithRelation"
      tags: *a84
  /school-api/union-exist:
    post:
      operationId: runCheckUniqueKeyExist
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Check multiple code exist or not.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UniqueKeyExistResponse"
      tags:
        - SCHOOL
  /student-api/{id}/outstanding:
    get:
      operationId: runGetOutstandingInvoice
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get outstanding invoice
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OutstandingInvoice"
      tags: &a85
        - STUDENT
  /student-api/{id}/summary:
    get:
      operationId: runGetStudentSummary
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get student profile and summaries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentWithSummary"
      tags: *a85
  /student-api/studentlist:
    post:
      operationId: runSearchStudentListWithSummary
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Object"
      responses:
        "200":
          description: Get list of student summary
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentListItemWithSummary"
      tags: *a85
  /student-api/{id}/active-enrollments:
    get:
      operationId: runGetActiveEnrollments
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get all active registered classes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EnrollmentItem"
      tags: *a85
  /student-api/{id}/enrollments:
    get:
      operationId: runGetEnrollments
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get all registered classes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EnrollmentItem"
      tags: *a85
    post:
      operationId: runCreateEnrollments
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/NewProductEnrollment"
      responses:
        "200":
          description: Add Multiple enrollments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueueJobProducerResponse"
      tags: *a85
  /student-api/{id}/enrollment-histories:
    get:
      operationId: runGetEnrollmentHistories
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get all registered classes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EnrollmentItem"
      tags: *a85
  /student-api/{id}/billing-history:
    get:
      operationId: runGetTransactions
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get billing history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BillingHistoryItem"
      tags: *a85
  /student-api/active-students:
    get:
      operationId: runGetActiveStudentQty
      summary: ""
      parameters: []
      responses:
        "200":
          description: obtain active student qty base on month
          content:
            application/json:
              schema:
                type: number
      tags: *a85
  /student-api/imports:
    post:
      operationId: runImportStudents
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ImportStudent"
      responses:
        "200":
          description: Bulk insert student profile.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ImportErrorMessage"
      tags: *a85
  /student-api/upgrade-student-level:
    post:
      operationId: runUpgradeStudentLevel
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpgradeStudentLevelRequestBody"
      responses:
        "200":
          description: Upgrade all student level to next level.
          content:
            application/json:
              schema:
                type: string
      tags: *a85
  /student-api/change-package-enroll-to-individual:
    post:
      operationId: runChangePackageEnrollToIndividual
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackageEnrollToIndividual"
      responses:
        "200":
          description: Change package enrollment to individual enrollment.
          content:
            application/json:
              schema:
                type: string
      tags: *a85
  /student-api/stop-package-enroll:
    post:
      operationId: runStopPackageEnroll
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackageEnrollToIndividual"
      responses:
        "200":
          description: Stop student package enrollment.
          content:
            application/json:
              schema:
                type: string
      tags: *a85
  /student-api/modify-package:
    post:
      operationId: runModifyPackage
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackageModified"
      responses:
        "200":
          description: Modify student package enrollment.
          content:
            application/json:
              schema:
                type: string
      tags: *a85
  /student-api/change-package:
    post:
      operationId: runChangePackage
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackageChanged"
      responses:
        "200":
          description: Modify student package enrollment.
          content:
            application/json:
              schema:
                type: string
      tags: *a85
  /student-api/{id}/check-available-package:
    get:
      operationId: runCheckForAvailablePackage
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Check for available package for student current enrollment.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AvailablePackageResponse"
      tags: *a85
  /student-api/individual-to-package:
    post:
      operationId: runIndividualToPackage
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IndividualtoPackage"
      responses:
        "200":
          description: Convert individual enrollment to package enrollment.
          content:
            application/json:
              schema:
                type: string
      tags: *a85
  /student-api/{id}/photo:
    get:
      operationId: runGetPhoto
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get Student photo
          content:
            image/png:
              schema:
                type: string
                format: binary
      tags: *a85
    post:
      operationId: runUploadPhoto
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadPhoto"
      responses:
        "200":
          description: Upload Student photo
          content:
            application/json:
              schema:
                type: string
      tags: *a85
  /studentgroup-api/union-exist:
    post:
      operationId: runCheckUniqueKeyExist
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Check multiple code exist or not.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UniqueKeyExistResponse"
      tags:
        - STUDENTGROUP
  /teacher-api/{dateFrom}/{dateTo}/teacher-performance:
    get:
      operationId: runGetTeacherPerformance
      summary: ""
      parameters:
        - name: dateFrom
          required: true
          in: path
          schema:
            type: string
        - name: dateTo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get teacher performance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeacherPerformance"
      tags: &a86
        - TEACHER
  /teacher-api/{dateFrom}/{dateTo}/attendance-by-teacher:
    get:
      operationId: runGetAttendanceByTeacher
      summary: ""
      parameters:
        - name: dateFrom
          required: true
          in: path
          schema:
            type: string
        - name: dateTo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get attendance by teacher
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttendanceSummaryByTeacher"
      tags: *a86
  /teacher-api/{dateFrom}/{dateTo}/teacher-by-lvl:
    get:
      operationId: runGetTeacherByLvl
      summary: ""
      parameters:
        - name: dateFrom
          required: true
          in: path
          schema:
            type: string
        - name: dateTo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get teacher by level
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeacherByLvl"
      tags: *a86
  /teacher-api/{dateFrom}/{dateTo}/attendancesummary-by-table:
    get:
      operationId: runGetAttendanceSummaryByTable
      summary: ""
      parameters:
        - name: dateFrom
          required: true
          in: path
          schema:
            type: string
        - name: dateTo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get attendance summary by table
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttendanceSummaryByTable"
      tags: *a86
  /teacher-api/{dateFrom}/{dateTo}/teacher-group-analyse:
    get:
      operationId: runGetTeacherGroupAnalyse
      summary: ""
      parameters:
        - name: dateFrom
          required: true
          in: path
          schema:
            type: string
        - name: dateTo
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get teacher group analysis
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeacherGroupAnalyse"
      tags: *a86
  /teacher-api/{id}/teacher-commission-settings:
    get:
      operationId: runGetTeacherCommissionSetting
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get teacher commisson setting
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeacherCommissionSettingRequest"
      tags: *a86
    post:
      operationId: runCreateTeacherCommission
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeacherCommissionSettingRequest"
      responses:
        "200":
          description: post teacher commission data
          content:
            application/json:
              schema:
                type: string
      tags: *a86
  /teacher-api/teacherCommission/{period}:
    get:
      operationId: runGetTeacherCommissionResult
      summary: ""
      parameters:
        - name: period
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: get teacher commisson result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommissionResponseData"
      tags: *a86
  /teacher-api/{id}/photo:
    get:
      operationId: runGetPhoto
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get Teacher photo
          content:
            image/png:
              schema:
                type: string
                format: binary
      tags: *a86
    post:
      operationId: runUploadPhoto
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadPhoto"
      responses:
        "200":
          description: Upload Teacher photo
          content:
            application/json:
              schema:
                type: string
      tags: *a86
  /tuitionclass-api/{id}/get-schedules:
    get:
      operationId: runGetTuitionClassWithSchedules
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get schedules of the classes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TuitionClassWithSchedules"
      tags: &a87
        - TUITIONCLASS
  /tuitionclass-api/active-classes/{month}:
    get:
      operationId: runGetActiveClassQtyByMonth
      summary: ""
      parameters:
        - name: month
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get active classes by month
          content:
            application/json:
              schema:
                type: number
      tags: *a87
  /tuitionclass-api/regenerate-schedule/preview:
    post:
      operationId: runPreviewRegenerateSchedule
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegenerateTuitionClassSchedule"
      responses:
        "200":
          description: Preview regenerate schedule result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ScheduleChanges"
      tags: *a87
  /tuitionclass-api/regenerate-schedule:
    post:
      operationId: runSendRecheduleQueue
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegenerateTuitionClassSchedule"
      responses:
        "200":
          description: Execute regenerate schedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueueJobProducerResponse"
      tags: *a87
  /tuitionclass-api/last-schedules:
    post:
      operationId: runGetTuitionClassesWithLastSchedules
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TuitionClassWithLastScheduleParam"
      responses:
        "200":
          description: Get last schedule for each tuition class by cutoff date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TuitionClassWithLastSchedule"
      tags: *a87
  /tuitionclass-api/nearby-schedules:
    post:
      operationId: runGetTuitionClassesWithNearbySchedules
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TuitionClassWithNearbyScheduleParam"
      responses:
        "200":
          description: Get classes with +- n day schedule
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TuitionClassWithNearbySchedule"
      tags: *a87
  /tuitionclass-api/close-registrations:
    post:
      operationId: runCloseRegistrations
      summary: ""
      parameters: []
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloseTuitionClassesRegistration"
      responses:
        "200":
          description: Inactive tuition classes and their schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TuitionClass"
      tags: *a87
  /user-api/{id}/permission:
    get:
      operationId: runGetPermission
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get user permission
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserPermission"
      tags: &a88
        - USER
    put:
      operationId: runUpdatePermission
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/UserPermission"
      responses:
        "200":
          description: set user permission
          content:
            application/json:
              schema:
                type: string
      tags: *a88
  /user-api/{id}/photo:
    get:
      operationId: runGetPhoto
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Get User photo
          content:
            image/png:
              schema:
                type: string
                format: binary
      tags: *a88
    post:
      operationId: runUploadPhoto
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        description: Request Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadPhoto"
      responses:
        "200":
          description: Upload User photo
          content:
            application/json:
              schema:
                type: string
      tags: *a88
  /studentapi/{id}/student-one-schedules:
    get:
      operationId: getOneStudentSchedules
      summary: ""
      description: obtain student schedules
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudentApiSchedule"
        "500":
          description: Internal error
      tags: *a66
info:
  title: simtrain-eco backend api
  description: "Internal use only (generator: 2.0.0w-alpha)"
  version: "2.0"
  contact: {}
tags: []
servers:
  - url: ""
components:
  securitySchemes:
    x-org:
      type: apiKey
      in: header
      name: x-org
      description: "base 64 url encode. example: MC0wLTA/MS0xLTE"
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.simbiz.cloud/auth/realms/simbiz.cloud/protocol/openid-connect/auth
          scopes: {}
    x-apikey:
      type: apiKey
      in: header
      name: x-apikey
      description: optional only use for specal case
    x-apisecret:
      type: apiKey
      in: header
      name: x-apisecret
      description: optional only use for specal case
    x-guest-accesstoken:
      type: apiKey
      in: header
      name: x-guest-accesstoken
      description: optional only use for specal case
  schemas:
    DocumentEventListItem:
      type: object
      properties:
        _id:
          type: string
          format: uuid
          default: ""
        eventType:
          type: string
          format: uuid
          default: ""
        created:
          type: string
          format: uuid
          default: ""
        createdBy:
          type: string
          format: uuid
          default: ""
        fullName:
          type: string
          format: uuid
          default: ""
        eventData:
          type: object
          format: uuid
          default: ""
    UpgradeScript:
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
        description:
          type: string
      required:
        - id
        - subject
        - description
    ProfileUserInvites:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        tenantId:
          type: number
        tenantName:
          type: string
      required:
        - _id
        - created
        - tenantId
        - tenantName
    BranchMinInfo:
      type: object
      properties:
        branchId:
          type: string
        branchCode:
          type: string
        branchName:
          type: string
      required:
        - branchId
        - branchCode
        - branchName
    ProfileUserBranch:
      type: object
      properties:
        permissionId:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        groups:
          description: List of user's group
          type: array
          items:
            type: string
        branch:
          $ref: "#/components/schemas/BranchMinInfo"
        orgRecordId:
          type: string
        xOrg:
          type: string
      required:
        - permissionId
        - tenantId
        - orgId
        - branchId
        - groups
        - branch
        - orgRecordId
        - xOrg
    TenantClientSetting:
      type: object
      properties:
        auditTrail:
          type: boolean
        webhook:
          type: boolean
        support:
          type: boolean
        disableClassReminder:
          type: boolean
    TenantOwner:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        uid:
          type: string
      required:
        - _id
        - label
        - uid
    TenantOutstandingReminder:
      type: object
      properties:
        enable:
          type: boolean
        cron:
          type: array
          items:
            type: string
    Tenant:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        tenantName:
          type: string
        active:
          type: boolean
        businessType:
          type: string
        description:
          type: string
        license:
          type: string
        planStartDate:
          type: string
        planDueDate:
          type: string
        clientSetting:
          $ref: "#/components/schemas/TenantClientSetting"
        owner:
          $ref: "#/components/schemas/TenantOwner"
        outstandingReminder:
          $ref: "#/components/schemas/TenantOutstandingReminder"
      required:
        - tenantId
        - tenantName
        - owner
    Organization:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        orgCode:
          type: string
        orgName:
          type: string
        registrationNo:
          type: string
        active:
          type: boolean
        description:
          type: string
        timeZone:
          type: string
        offsetMinute:
          type: number
        currency:
          type: string
        country:
          type: string
        imageUrl:
          type: string
        more:
          type: object
          default: {}
      required:
        - orgId
        - orgCode
        - orgName
    BranchOrganization:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        orgId:
          type: number
    BranchWorkingHours:
      type: object
      properties:
        day:
          type: string
        start:
          type: string
        end:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
    Branch:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        branchCode:
          type: string
        branchName:
          type: string
        registrationNo:
          type: string
        companyName:
          type: string
        street1:
          type: string
        street2:
          type: string
        city:
          type: string
        region:
          type: string
        postcode:
          type: string
        country:
          type: string
        tel:
          type: string
        email:
          type: string
        active:
          type: boolean
        offdays:
          type: array
          items:
            type: string
        workStart:
          type: string
        workEnd:
          type: string
        description:
          type: string
        invoiceRemark:
          type: string
        refundRemark:
          type: string
        paymentRemark:
          type: string
        cnRemark:
          type: string
        imageUrl:
          type: string
        organization:
          $ref: "#/components/schemas/BranchOrganization"
        workingHours:
          type: array
          items:
            $ref: "#/components/schemas/BranchWorkingHours"
        more:
          type: object
          default: {}
      required:
        - branchCode
        - branchName
        - registrationNo
        - companyName
        - workStart
        - workEnd
        - organization
    UserContextInfo:
      type: object
      properties:
        _id:
          type: string
        uid:
          type: string
        sessionId:
          type: string
        xOrg:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        orgRecordId:
          type: string
        branchId:
          type: number
        branchRecordId:
          type: string
        branchCode:
          type: string
        branchName:
          type: string
        orgCode:
          type: string
        orgName:
          type: string
        timeZone:
          type: string
        currency:
          type: string
        country:
          type: string
        offsetMinute:
          type: number
        email:
          type: string
        uName:
          type: string
        fullName:
          type: string
        groups:
          description: "List of user's group in product "
          type: array
          items:
            type: string
        roles:
          description: List of task, or authority of the user can do
          type: array
          items:
            type: string
        invites:
          description: Provide invitation id to user, to authorize join the tenant
          type: array
          items:
            $ref: "#/components/schemas/ProfileUserInvites"
        branches:
          description: List of branch the user can access in current tenant
          type: array
          items:
            $ref: "#/components/schemas/ProfileUserBranch"
        tenantInfo:
          description: List of task, or authority of the user can do
          allOf:
            - $ref: "#/components/schemas/Tenant"
        orgInfo:
          description: List of task, or authority of the user can do
          allOf:
            - $ref: "#/components/schemas/Organization"
        branchInfo:
          description: List of task, or authority of the user can do
          allOf:
            - $ref: "#/components/schemas/Branch"
        moreProps:
          type: object
          description: Store all the rest of useful fields regarding user or branch
      required:
        - _id
        - uid
        - sessionId
        - xOrg
        - tenantId
        - orgId
        - orgRecordId
        - branchId
        - branchRecordId
        - branchCode
        - branchName
        - orgCode
        - orgName
        - timeZone
        - currency
        - country
        - offsetMinute
        - email
        - uName
        - fullName
        - groups
        - roles
        - invites
        - branches
        - tenantInfo
        - orgInfo
        - branchInfo
        - moreProps
    String:
      type: object
      properties: {}
    KeyValue:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        id:
          type: string
      required:
        - key
        - value
    RegTenant:
      type: object
      properties:
        tenantName:
          type: string
          examples:
            - my company 1
          default: ""
        timeZone:
          type: string
          examples:
            - Asia/Kuala_Lumpur
          default: ""
        utcOffset:
          type: number
          examples:
            - 0
            - -460
      required:
        - tenantName
        - timeZone
        - utcOffset
    SearchBody:
      type: object
      properties: {}
    User:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        uid:
          type: string
        fullName:
          type: string
        email:
          type: string
        active:
          type: boolean
        description:
          type: string
        completedTours:
          type: array
          items:
            type: string
        lastActivity:
          type: string
        mobileNo:
          type: string
        interestedInSales:
          type: boolean
        imageUrl:
          type: string
    Object:
      type: object
      properties: {}
    UserAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        uid:
          type: string
      required:
        - _id
        - code
        - label
    PatchManyRequest:
      type: object
      properties:
        data:
          type: object
        filter:
          type: object
      required:
        - data
    UpdateManyResponse:
      type: object
      properties:
        acknowledged:
          type: boolean
        matchedCount:
          type: number
        modifiedCount:
          type: number
        upsertedCount:
          type: number
        upsertedId:
          type: string
          nullable: true
      required:
        - acknowledged
        - matchedCount
        - modifiedCount
        - upsertedCount
        - upsertedId
    Permission:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        groups:
          type: array
          items:
            type: string
        uid:
          type: string
        userId:
          type: string
    PermissionAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    TenantAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    OrganizationAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        orgId:
          type: number
      required:
        - _id
        - code
        - label
    BranchAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        branchId:
          type: number
      required:
        - _id
        - code
        - label
    KeyValuePair:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value
    KeyValuePairAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    MiniAppInstallationMiniApp:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        env:
          type: string
        developerPortalAppId:
          type: string
    MiniAppInstallationMiniApiUser:
      type: object
      properties:
        _id:
          type: string
        uid:
          type: string
        name:
          type: string
        email:
          type: string
    MiniAppInstallation:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        apiKey:
          type: string
        isActive:
          type: boolean
        seqNo:
          type: number
        miniApp:
          $ref: "#/components/schemas/MiniAppInstallationMiniApp"
        miniApiUser:
          $ref: "#/components/schemas/MiniAppInstallationMiniApiUser"
        settings:
          type: object
          default: {}
      required:
        - apiKey
        - isActive
        - miniApp
        - settings
    MiniAppInstallationAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    DynamicParam:
      type: object
      properties: {}
    MiniAppDetailPermission:
      type: object
      properties:
        hasMiniAppFeature:
          type: boolean
          default: false
        canInstall:
          type: boolean
          default: false
        canUninstall:
          type: boolean
          default: false
        canUpdateSetting:
          type: boolean
          default: false
      required:
        - hasMiniAppFeature
        - canInstall
        - canUninstall
        - canUpdateSetting
    MiniAppAuthor:
      type: object
      properties:
        uid:
          type: string
        name:
          type: string
        email:
          type: string
        team:
          type: string
      required:
        - uid
        - name
        - email
    MiniAppAccess:
      type: object
      properties:
        visibility:
          type: string
        allowEmails:
          type: array
          items:
            type: string
        requiredPlans:
          type: array
          items:
            type: string
      required:
        - visibility
        - requiredPlans
    MiniAppDevelopment:
      type: object
      properties:
        demoXOrg:
          type: string
    MiniAppDeveloperPortal:
      type: object
      properties:
        appId:
          type: string
      required:
        - appId
    MiniAppIntroFeatures:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
      required:
        - title
        - description
    MiniAppIntro:
      type: object
      properties:
        description:
          type: string
        previewImages:
          type: array
          items:
            type: string
        features:
          type: array
          items:
            $ref: "#/components/schemas/MiniAppIntroFeatures"
      required:
        - description
        - previewImages
        - features
    MiniAppIntegrationEnabled:
      type: object
      properties:
        miniApi:
          type: boolean
        customField:
          type: boolean
        customPage:
          type: boolean
      required:
        - miniApi
        - customField
        - customPage
    MiniAppIntegrationCustomFieldFields:
      type: object
      properties:
        code:
          type: string
        title:
          type: string
        description:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        jsonSchema:
          type: object
          default: {}
      required:
        - code
        - title
        - description
        - jsonSchema
    MiniAppIntegrationCustomField:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: "#/components/schemas/MiniAppIntegrationCustomFieldFields"
      required:
        - fields
    MiniAppIntegrationCustomPagePagesSources:
      type: object
      properties:
        development:
          type: string
        production:
          type: string
      required:
        - development
        - production
    MiniAppIntegrationCustomPagePages:
      type: object
      properties:
        code:
          type: string
        title:
          type: string
        description:
          type: string
        iconType:
          type: string
        icon:
          type: string
        isHideOnMenu:
          type: boolean
        requiredPermissions:
          type: array
          items:
            type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        sources:
          $ref: "#/components/schemas/MiniAppIntegrationCustomPagePagesSources"
      required:
        - code
        - title
        - description
        - iconType
        - requiredPermissions
        - sources
    MiniAppIntegrationCustomPageSetting:
      type: object
      properties:
        note:
          type: string
        jsonSchema:
          type: object
          default: {}
      required:
        - jsonSchema
    MiniAppIntegrationCustomPage:
      type: object
      properties:
        pages:
          type: array
          items:
            $ref: "#/components/schemas/MiniAppIntegrationCustomPagePages"
        setting:
          $ref: "#/components/schemas/MiniAppIntegrationCustomPageSetting"
      required:
        - pages
    MiniAppIntegration:
      type: object
      properties:
        scopes:
          type: array
          items:
            type: string
        enabled:
          $ref: "#/components/schemas/MiniAppIntegrationEnabled"
        customField:
          $ref: "#/components/schemas/MiniAppIntegrationCustomField"
        customPage:
          $ref: "#/components/schemas/MiniAppIntegrationCustomPage"
      required:
        - enabled
    MiniAppDetail:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        code:
          type: string
        name:
          type: string
        env:
          type: string
        version:
          type: string
        logo:
          type: string
        website:
          type: string
        description:
          type: string
        pricing:
          type: number
        status:
          type: string
        tags:
          type: array
          items:
            type: string
        author:
          $ref: "#/components/schemas/MiniAppAuthor"
        access:
          $ref: "#/components/schemas/MiniAppAccess"
        development:
          $ref: "#/components/schemas/MiniAppDevelopment"
        developerPortal:
          $ref: "#/components/schemas/MiniAppDeveloperPortal"
        intro:
          $ref: "#/components/schemas/MiniAppIntro"
        integration:
          $ref: "#/components/schemas/MiniAppIntegration"
        miniAppInstallation:
          $ref: "#/components/schemas/MiniAppInstallation"
        hasRequiredPlan:
          type: boolean
      required:
        - code
        - name
        - env
        - version
        - logo
        - description
        - pricing
        - status
        - author
        - access
        - developerPortal
        - intro
        - integration
        - hasRequiredPlan
    InstalledMiniAppDetail:
      type: object
      properties:
        permissions:
          $ref: "#/components/schemas/MiniAppDetailPermission"
        installedMiniApps:
          type: array
          items:
            $ref: "#/components/schemas/MiniAppDetail"
      required:
        - permissions
        - installedMiniApps
    CategorizedMiniAppDetail:
      type: object
      properties:
        upcomingMiniApps:
          type: array
          items:
            $ref: "#/components/schemas/MiniAppDetail"
        availableMiniApps:
          type: array
          items:
            $ref: "#/components/schemas/MiniAppDetail"
      required:
        - upcomingMiniApps
        - availableMiniApps
    MiniApp:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        code:
          type: string
        name:
          type: string
        env:
          type: string
        version:
          type: string
        logo:
          type: string
        website:
          type: string
        description:
          type: string
        pricing:
          type: number
        status:
          type: string
        tags:
          type: array
          items:
            type: string
        author:
          $ref: "#/components/schemas/MiniAppAuthor"
        access:
          $ref: "#/components/schemas/MiniAppAccess"
        development:
          $ref: "#/components/schemas/MiniAppDevelopment"
        developerPortal:
          $ref: "#/components/schemas/MiniAppDeveloperPortal"
        intro:
          $ref: "#/components/schemas/MiniAppIntro"
        integration:
          $ref: "#/components/schemas/MiniAppIntegration"
      required:
        - code
        - name
        - env
        - version
        - logo
        - description
        - pricing
        - status
        - author
        - access
        - developerPortal
        - intro
        - integration
    DeveloperPortalInstalledXOrgsResponseInstalledXOrg:
      type: object
      properties:
        branchCode:
          type: string
        branchName:
          type: string
        xOrg:
          type: array
          items:
            type: string
      required:
        - branchCode
        - branchName
        - xOrg
    DeveloperPortalInstalledXOrgsResponse:
      type: object
      properties:
        demoXOrg:
          type: string
        installedXOrgs:
          type: array
          items:
            $ref: "#/components/schemas/DeveloperPortalInstalledXOrgsResponseInstalledXOrg"
      required:
        - demoXOrg
        - installedXOrgs
    MiniAppAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    DocumentNoFormatBranch:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        branchId:
          type: number
    DocumentNoFormat:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        docNoFormatNo:
          type: string
        docNoFormatName:
          type: string
        active:
          type: boolean
        default:
          type: boolean
        docNoType:
          type: string
        docNoPattern:
          type: string
        nextNumber:
          type: number
        branch:
          $ref: "#/components/schemas/DocumentNoFormatBranch"
    DocumentNoFormatAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        default:
          type: boolean
      required:
        - _id
        - code
        - label
    SystemMessage:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        uid:
          type: string
        messageType:
          type: string
        messageTitle:
          type: string
        read:
          type: boolean
        body:
          type: string
    SystemMessageAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    CustomFieldForm:
      type: object
      properties:
        jsonSchema:
          type: object
          default: {}
    CustomFieldList:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
    CustomField:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        collectionName:
          type: string
        form:
          $ref: "#/components/schemas/CustomFieldForm"
        list:
          $ref: "#/components/schemas/CustomFieldList"
    CustomFieldAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    QueueJobJob:
      type: object
      properties:
        id:
          type: string
        processor:
          type: string
        name:
          type: string
        status:
          type: string
        title:
          type: string
      required:
        - id
        - processor
        - name
        - status
    QueueJobError:
      type: object
      properties:
        status:
          type: number
        name:
          type: string
        message:
          type: string
    QueueJob:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        job:
          $ref: "#/components/schemas/QueueJobJob"
        payload:
          type: object
          default: {}
        result:
          type: object
          default: {}
        error:
          $ref: "#/components/schemas/QueueJobError"
      required:
        - job
    QueueJobAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    WebhookBasicAuth:
      type: object
      properties:
        user:
          type: string
        password:
          type: string
    WebhookHeaders:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
    Webhook:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        title:
          type: string
        url:
          type: string
        requestMethod:
          type: string
        authentication:
          type: string
        description:
          type: string
        body:
          type: string
        active:
          type: boolean
        resourceName:
          type: string
        eventType:
          type: string
        jobType:
          type: string
        retryAttemps:
          type: number
        basicAuth:
          $ref: "#/components/schemas/WebhookBasicAuth"
        headers:
          type: array
          items:
            $ref: "#/components/schemas/WebhookHeaders"
      required:
        - title
        - url
    WebhookAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    AcademySession:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        academySessionCode:
          type: string
        academySessionName:
          type: string
        active:
          type: boolean
        startDate:
          type: string
        endDate:
          type: string
        description:
          type: string
        more:
          type: object
          default: {}
    AcademySessionAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        startDate:
          type: string
        endDate:
          type: string
      required:
        - _id
        - code
        - label
    AcademySessionClassGeneratorDetails:
      type: object
      properties:
        fromTuitionClassId:
          type: string
        asProductId:
          type: string
        asTeacherId:
          type: string
        asRoomId:
          type: string
        active:
          type: boolean
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
    AcademySessionClassGenerator:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        generateNo:
          type: string
        fromAcademySessionId:
          type: string
        toAcademySessionId:
          type: string
        migrateEnrollment:
          type: boolean
        classQuantity:
          type: number
        enrollmentQuantity:
          type: number
        status:
          type: string
        histories:
          type: string
        details:
          type: array
          items:
            $ref: "#/components/schemas/AcademySessionClassGeneratorDetails"
      required:
        - status
    AcademySessionClassGeneratorAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    AccountTransactionStudent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AccountTransactionAgent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AccountTransactionDocument:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AccountTransactionKnockOffDocument:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AccountTransactionKnockOff:
      type: object
      properties:
        _id:
          type: string
        documentName:
          type: string
        amount:
          type: number
        date:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        document:
          $ref: "#/components/schemas/AccountTransactionKnockOffDocument"
    AccountTransactionRefundsDocument:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        refundTotal:
          type: number
        refundDate:
          type: string
    AccountTransactionRefunds:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        document:
          $ref: "#/components/schemas/AccountTransactionRefundsDocument"
    AccountTransaction:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        documentNo:
          type: string
        documentName:
          type: string
        date:
          type: string
        amount:
          type: number
        ledgerAmt:
          type: number
        salesAmt:
          type: number
        knockOffAmt:
          type: number
        balance:
          type: number
        refundAmount:
          type: number
        description:
          type: string
        student:
          $ref: "#/components/schemas/AccountTransactionStudent"
        agent:
          $ref: "#/components/schemas/AccountTransactionAgent"
        document:
          $ref: "#/components/schemas/AccountTransactionDocument"
        knockOff:
          type: array
          items:
            $ref: "#/components/schemas/AccountTransactionKnockOff"
        refunds:
          type: array
          items:
            $ref: "#/components/schemas/AccountTransactionRefunds"
      required:
        - documentNo
        - documentName
        - date
        - amount
        - knockOffAmt
        - balance
        - student
        - document
    TextSearchBody:
      type: object
      properties: {}
    AccountTransactionAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    ActionHistory:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        actionType:
          type: string
        status:
          type: string
        startActionTime:
          type: string
        endActionTime:
          type: string
        requestBody:
          type: string
        data:
          type: object
          default: &a89 {}
      required:
        - actionType
        - status
    ActionHistoryAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    Agent:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        agentCode:
          type: string
        agentName:
          type: string
        ic:
          type: string
        dob:
          type: string
        email:
          type: string
        mobileNo:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
      required:
        - agentCode
        - agentName
        - dob
        - email
        - mobileNo
    AgentAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    AnnouncementAnnouncementtype:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AnnouncementNotified:
      type: object
      properties:
        sent:
          type: boolean
        date:
          type: string
    AnnouncementTargetsTeachersPerson:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AnnouncementTargetsTeachers:
      type: object
      properties:
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        person:
          $ref: "#/components/schemas/AnnouncementTargetsTeachersPerson"
    AnnouncementTargetsTeacherGroupsPerson:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AnnouncementTargetsTeacherGroups:
      type: object
      properties:
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        person:
          $ref: "#/components/schemas/AnnouncementTargetsTeacherGroupsPerson"
    AnnouncementTargetsLevelsPerson:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AnnouncementTargetsLevels:
      type: object
      properties:
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        person:
          $ref: "#/components/schemas/AnnouncementTargetsLevelsPerson"
    AnnouncementTargetsStudentsPerson:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AnnouncementTargetsStudents:
      type: object
      properties:
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        person:
          $ref: "#/components/schemas/AnnouncementTargetsStudentsPerson"
    AnnouncementTargetsClassesPerson:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AnnouncementTargetsClasses:
      type: object
      properties:
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        person:
          $ref: "#/components/schemas/AnnouncementTargetsClassesPerson"
    AnnouncementPreparedBy:
      type: object
      properties:
        _id:
          type: string
        fullName:
          type: string
        uid:
          type: string
    AnnouncementDocNoFormat:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
    Announcement:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        announcementNo:
          type: string
        title:
          type: string
        body:
          type: string
        targets:
          type: string
        announcementDate:
          type: string
        closeDate:
          type: string
        internalNote:
          type: string
        documentStatus:
          type: string
        announcementtype:
          $ref: "#/components/schemas/AnnouncementAnnouncementtype"
        notified:
          $ref: "#/components/schemas/AnnouncementNotified"
        targetsTeachers:
          type: array
          items:
            $ref: "#/components/schemas/AnnouncementTargetsTeachers"
        targetsTeacherGroups:
          type: array
          items:
            $ref: "#/components/schemas/AnnouncementTargetsTeacherGroups"
        targetsLevels:
          type: array
          items:
            $ref: "#/components/schemas/AnnouncementTargetsLevels"
        targetsStudents:
          type: array
          items:
            $ref: "#/components/schemas/AnnouncementTargetsStudents"
        targetsClasses:
          type: array
          items:
            $ref: "#/components/schemas/AnnouncementTargetsClasses"
        preparedBy:
          $ref: "#/components/schemas/AnnouncementPreparedBy"
        docNoFormat:
          $ref: "#/components/schemas/AnnouncementDocNoFormat"
        more:
          type: object
          default: {}
      required:
        - title
        - body
        - announcementDate
        - closeDate
    AnnouncementAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        announcementDate:
          type: string
      required:
        - _id
        - code
        - label
    AnnouncementType:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        announcementtypeCode:
          type: string
        announcementtypeName:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
    AnnouncementTypeAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    AppIntegrationSettingsDebtorAccountConfigLevel:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        code:
          type: string
    AppIntegrationSettingsDebtorAccountConfig:
      type: object
      properties:
        account:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        level:
          $ref: "#/components/schemas/AppIntegrationSettingsDebtorAccountConfigLevel"
    AppIntegrationSettingsSalesAccountConfigProductCategory:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        code:
          type: string
        categoryType:
          type: string
    AppIntegrationSettingsSalesAccountConfig:
      type: object
      properties:
        account:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        productCategory:
          $ref:
            "#/components/schemas/AppIntegrationSettingsSalesAccountConfigProductCate\
            gory"
    AppIntegrationSettingsBankAccountConfigPaymentMethod:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        code:
          type: string
    AppIntegrationSettingsBankAccountConfig:
      type: object
      properties:
        account:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        paymentMethod:
          $ref:
            "#/components/schemas/AppIntegrationSettingsBankAccountConfigPaymentMetho\
            d"
    AppIntegrationSettings:
      type: object
      properties:
        systemLink:
          type: string
        orgCode:
          type: string
        appSystemBranch:
          type: string
        username:
          type: string
        password:
          type: string
        defaultDebtorAccount:
          type: string
        defaultSalesAccount:
          type: string
        defaultRoundingAccount:
          type: string
        defaultRefundAccount:
          type: string
        isAutoSubmitEinvoice:
          type: boolean
        implementationDate:
          type: string
        debtorAccountConfig:
          type: array
          items:
            $ref: "#/components/schemas/AppIntegrationSettingsDebtorAccountConfig"
        salesAccountConfig:
          type: array
          items:
            $ref: "#/components/schemas/AppIntegrationSettingsSalesAccountConfig"
        bankAccountConfig:
          type: array
          items:
            $ref: "#/components/schemas/AppIntegrationSettingsBankAccountConfig"
    AppIntegration:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        appId:
          type: string
        appType:
          type: string
        active:
          type: boolean
        settings:
          $ref: "#/components/schemas/AppIntegrationSettings"
      required:
        - appId
        - appType
        - settings
    AppIntegrationAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    AppIntegrationLog:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        appId:
          type: string
        requestUrl:
          type: string
        requestMethod:
          type: string
        responseCode:
          type: string
        responseMessage:
          type: string
        dataTransfer:
          type: string
      required:
        - requestUrl
        - requestMethod
        - responseCode
        - responseMessage
        - dataTransfer
    AppIntegrationLogAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    AppUserAnnouncementViewAnnouncement:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    AppUserAnnouncementView:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        appUserId:
          type: string
        read:
          type: boolean
        announcement:
          $ref: "#/components/schemas/AppUserAnnouncementViewAnnouncement"
    AppUserAnnouncementViewAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    Area:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        areaCode:
          type: string
        areaName:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
    AreaAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    BillingScheduleInvoice:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        amount:
          type: number
    BillingSchedule:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        enrollmentId:
          type: string
        studentId:
          type: string
        billingCount:
          type: number
        startDate:
          type: string
        endDate:
          type: string
        fee:
          type: number
        invoice:
          $ref: "#/components/schemas/BillingScheduleInvoice"
      required:
        - enrollmentId
        - studentId
        - billingCount
        - startDate
        - endDate
        - fee
    BillingScheduleAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    Category:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        categoryCode:
          type: string
        categoryName:
          type: string
        active:
          type: boolean
        categoryType:
          type: string
        description:
          type: string
        more:
          type: object
          default: {}
    CategoryAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        categoryType:
          type: string
      required:
        - _id
        - code
        - label
    CreditNoteStudentAgent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    CreditNoteStudentLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    CreditNoteStudentStudentGroup:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    CreditNoteStudent:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        code:
          type: string
        agent:
          $ref: "#/components/schemas/CreditNoteStudentAgent"
        level:
          $ref: "#/components/schemas/CreditNoteStudentLevel"
        studentGroup:
          $ref: "#/components/schemas/CreditNoteStudentStudentGroup"
      required:
        - _id
    CreditNotePreparedBy:
      type: object
      properties:
        _id:
          type: string
        fullName:
          type: string
        uid:
          type: string
    CreditNoteNotified:
      type: object
      properties:
        sent:
          type: boolean
        date:
          type: string
    CreditNoteAgent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    CreditNoteParent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    CreditNoteInvoicesInvoice:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        code:
          type: string
        invoiceDate:
          type: string
    CreditNoteInvoices:
      type: object
      properties:
        balance:
          type: number
        knockOffAmt:
          type: number
        newBalance:
          type: number
        description:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        invoice:
          $ref: "#/components/schemas/CreditNoteInvoicesInvoice"
      required:
        - balance
        - knockOffAmt
        - newBalance
        - invoice
    CreditNoteIntegrateSystem:
      type: object
      properties:
        appId:
          type: string
        documentNo:
          type: string
        documentType:
          type: string
        documentId:
          type: string
        documentStatus:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
    CreditNoteDocNoFormat:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
    CreditNote:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        cnNo:
          type: string
        cnDate:
          type: string
        cnTitle:
          type: string
        cnTotal:
          type: number
        description:
          type: string
        documentStatus:
          type: string
        student:
          $ref: "#/components/schemas/CreditNoteStudent"
        preparedBy:
          $ref: "#/components/schemas/CreditNotePreparedBy"
        notified:
          $ref: "#/components/schemas/CreditNoteNotified"
        agent:
          $ref: "#/components/schemas/CreditNoteAgent"
        parent:
          $ref: "#/components/schemas/CreditNoteParent"
        invoices:
          type: array
          items:
            $ref: "#/components/schemas/CreditNoteInvoices"
        integrateSystem:
          type: array
          items:
            $ref: "#/components/schemas/CreditNoteIntegrateSystem"
        docNoFormat:
          $ref: "#/components/schemas/CreditNoteDocNoFormat"
        more:
          type: object
          default: {}
      required:
        - cnDate
        - cnTotal
        - student
        - invoices
    CreditNoteAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    CustomizePrintFormat:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        jrxml:
          type: string
        formatId:
          type: string
        formatTitle:
          type: string
        active:
          type: boolean
        description:
          type: string
    CustomizePrintFormatAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    MobileAppUserTokens:
      type: object
      properties:
        messagingToken:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
    MobileAppUser:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/MobileAppUserTokens"
      required:
        - email
    MobileAppUserAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    EnrollmentProduct:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        defaultPrice:
          type: number
        lessonsPerTerm:
          type: number
        billingMethod:
          type: string
        categoryType:
          type: string
      required:
        - _id
    EnrollmentPackage:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        amount:
          type: number
        itemRow:
          type: number
    EnrollmentTuitionClass:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        productId:
          type: string
        startDate:
          type: string
        endDate:
          type: string
    EnrollmentStudentLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    EnrollmentStudent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        level:
          $ref: "#/components/schemas/EnrollmentStudentLevel"
      required:
        - _id
    EnrollmentLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    EnrollmentStopReason:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    EnrollmentDocNoFormat:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
    Enrollment:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        enrollmentNo:
          type: string
        enrollmentTitle:
          type: string
        academySessionClassGeneratorId:
          type: string
        fee:
          type: number
        billingMethod:
          type: string
        categoryType:
          type: string
        lessonsPerTerm:
          type: number
        startDate:
          type: string
        status:
          type: string
        endDate:
          type: string
        planReturnDate:
          type: string
        restartDate:
          type: string
        stopDescription:
          type: string
        description:
          type: string
        product:
          $ref: "#/components/schemas/EnrollmentProduct"
        package:
          $ref: "#/components/schemas/EnrollmentPackage"
        tuitionClass:
          $ref: "#/components/schemas/EnrollmentTuitionClass"
        student:
          $ref: "#/components/schemas/EnrollmentStudent"
        level:
          $ref: "#/components/schemas/EnrollmentLevel"
        stopReason:
          $ref: "#/components/schemas/EnrollmentStopReason"
        docNoFormat:
          $ref: "#/components/schemas/EnrollmentDocNoFormat"
      required:
        - fee
        - billingMethod
        - categoryType
        - startDate
        - status
        - product
        - student
        - level
    EnrollmentAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    Holiday:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        holidayCode:
          type: string
        holidayName:
          type: string
        holidayDate:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
    HolidayAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    InvoicePreparedBy:
      type: object
      properties:
        _id:
          type: string
        fullName:
          type: string
        uid:
          type: string
    InvoiceStudentAgent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    InvoiceStudentLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    InvoiceStudentStudentGroup:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    InvoiceStudent:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        code:
          type: string
        agent:
          $ref: "#/components/schemas/InvoiceStudentAgent"
        level:
          $ref: "#/components/schemas/InvoiceStudentLevel"
        studentGroup:
          $ref: "#/components/schemas/InvoiceStudentStudentGroup"
      required:
        - _id
    InvoiceNotified:
      type: object
      properties:
        sent:
          type: boolean
        date:
          type: string
    InvoiceAgent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    InvoiceParent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    InvoiceDetailsProductCategory:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    InvoiceDetailsProduct:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        billingMethod:
          type: string
        defaultPrice:
          type: number
        category:
          $ref: "#/components/schemas/InvoiceDetailsProductCategory"
    InvoiceDetailsPackage:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        amount:
          type: number
    InvoiceDetails:
      type: object
      properties:
        enrollmentId:
          type: string
        enrollmentBillingId:
          type: string
        quantity:
          type: number
        billingMethod:
          type: string
        unitPrice:
          type: number
        subTotal:
          type: number
        description:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        product:
          $ref: "#/components/schemas/InvoiceDetailsProduct"
        package:
          $ref: "#/components/schemas/InvoiceDetailsPackage"
      required:
        - quantity
        - unitPrice
        - subTotal
        - product
    InvoiceIntegrateSystem:
      type: object
      properties:
        appId:
          type: string
        documentNo:
          type: string
        documentType:
          type: string
        documentId:
          type: string
        documentStatus:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
    InvoiceDocNoFormat:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
    Invoice:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        generateId:
          type: string
        invoiceNo:
          type: string
        invoiceDate:
          type: string
        invoiceTitle:
          type: string
        invoiceTotal:
          type: number
        description:
          type: string
        summary:
          type: string
        documentStatus:
          type: string
        preparedBy:
          $ref: "#/components/schemas/InvoicePreparedBy"
        student:
          $ref: "#/components/schemas/InvoiceStudent"
        notified:
          $ref: "#/components/schemas/InvoiceNotified"
        agent:
          $ref: "#/components/schemas/InvoiceAgent"
        parent:
          $ref: "#/components/schemas/InvoiceParent"
        details:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceDetails"
        integrateSystem:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceIntegrateSystem"
        docNoFormat:
          $ref: "#/components/schemas/InvoiceDocNoFormat"
        more:
          type: object
          default: {}
      required:
        - invoiceDate
        - invoiceTotal
        - student
        - details
    InvoiceAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        invoiceDate:
          type: string
        student:
          $ref: "#/components/schemas/InvoiceStudent"
        agent:
          $ref: "#/components/schemas/InvoiceAgent"
        invoiceTotal:
          type: number
      required:
        - _id
        - code
        - label
    LevelNextLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    Level:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        levelCode:
          type: string
        levelName:
          type: string
        active:
          type: boolean
        description:
          type: string
        nextLevel:
          $ref: "#/components/schemas/LevelNextLevel"
        more:
          type: object
          default: &a90 {}
    LevelAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    MobileAppMessageStudent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    MobileAppMessage:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        uid:
          type: string
        messageType:
          type: string
        messageTitle:
          type: string
        read:
          type: boolean
        body:
          type: string
        student:
          $ref: "#/components/schemas/MobileAppMessageStudent"
    MobileAppMessageAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    Parent:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        occupation:
          type: string
        parentName:
          type: string
        email:
          type: string
        mobileNo:
          type: string
        identityNo:
          type: string
        tinNo:
          type: string
        gender:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
      required:
        - parentName
        - email
        - mobileNo
    ParentAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        gender:
          type: string
        mobileNo:
          type: string
      required:
        - _id
        - code
        - label
    PaymentStudentAgent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    PaymentStudentLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    PaymentStudentStudentGroup:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    PaymentStudent:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        code:
          type: string
        agent:
          $ref: "#/components/schemas/PaymentStudentAgent"
        level:
          $ref: "#/components/schemas/PaymentStudentLevel"
        studentGroup:
          $ref: "#/components/schemas/PaymentStudentStudentGroup"
      required:
        - _id
    PaymentPreparedBy:
      type: object
      properties:
        _id:
          type: string
        fullName:
          type: string
        uid:
          type: string
    PaymentNotified:
      type: object
      properties:
        sent:
          type: boolean
        date:
          type: string
    PaymentAgent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    PaymentParent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    PaymentInvoicesInvoice:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        code:
          type: string
        invoiceDate:
          type: string
    PaymentInvoices:
      type: object
      properties:
        balance:
          type: number
        knockOffAmt:
          type: number
        newBalance:
          type: number
        description:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        invoice:
          $ref: "#/components/schemas/PaymentInvoicesInvoice"
      required:
        - balance
        - knockOffAmt
        - newBalance
        - invoice
    PaymentPaymentMethodsPaymentMethod:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    PaymentPaymentMethods:
      type: object
      properties:
        amount:
          type: number
        transNo:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        paymentMethod:
          $ref: "#/components/schemas/PaymentPaymentMethodsPaymentMethod"
      required:
        - amount
        - paymentMethod
    PaymentIntegrateSystem:
      type: object
      properties:
        appId:
          type: string
        documentNo:
          type: string
        documentType:
          type: string
        documentId:
          type: string
        documentStatus:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
    PaymentDocNoFormat:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
    Payment:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        paymentNo:
          type: string
        paymentDate:
          type: string
        paymentDuedate:
          type: string
        paymentTitle:
          type: string
        paymentTotal:
          type: number
        invoiceTotal:
          type: number
        onlinePayment:
          type: boolean
        description:
          type: string
        documentStatus:
          type: string
        student:
          $ref: "#/components/schemas/PaymentStudent"
        preparedBy:
          $ref: "#/components/schemas/PaymentPreparedBy"
        notified:
          $ref: "#/components/schemas/PaymentNotified"
        agent:
          $ref: "#/components/schemas/PaymentAgent"
        parent:
          $ref: "#/components/schemas/PaymentParent"
        invoices:
          type: array
          items:
            $ref: "#/components/schemas/PaymentInvoices"
        paymentMethods:
          type: array
          items:
            $ref: "#/components/schemas/PaymentPaymentMethods"
        integrateSystem:
          type: array
          items:
            $ref: "#/components/schemas/PaymentIntegrateSystem"
        docNoFormat:
          $ref: "#/components/schemas/PaymentDocNoFormat"
        more:
          type: object
          default: {}
      required:
        - paymentDate
        - paymentTotal
        - student
        - invoices
        - paymentMethods
    PaymentAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        paymentDate:
          type: string
        student:
          $ref: "#/components/schemas/PaymentStudent"
        agent:
          $ref: "#/components/schemas/PaymentAgent"
        paymentTotal:
          type: number
      required:
        - _id
        - code
        - label
    PaymentMethod:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        paymentMethodCode:
          type: string
        paymentMethodName:
          type: string
        onlinePayment:
          type: boolean
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
      required:
        - paymentMethodCode
        - paymentMethodName
    PaymentMethodAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    ProductCategory:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        categoryType:
          type: string
    ProductLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    Product:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        productCode:
          type: string
        productName:
          type: string
        categoryType:
          type: string
        defaultPrice:
          type: number
        billingMethod:
          type: string
        defaultDuration:
          type: number
        lessonsPerTerm:
          type: number
        active:
          type: boolean
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        category:
          $ref: "#/components/schemas/ProductCategory"
        level:
          $ref: "#/components/schemas/ProductLevel"
        more:
          type: object
          default: {}
      required:
        - productCode
        - productName
        - defaultPrice
        - billingMethod
        - category
    ProductAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        defaultPrice:
          type: number
        categoryType:
          type: string
        level:
          $ref: "#/components/schemas/ProductLevel"
        defaultDuration:
          type: number
        lessonsPerTerm:
          type: number
        billingMethod:
          type: string
        category:
          $ref: "#/components/schemas/ProductCategory"
      required:
        - _id
        - code
        - label
    ProductPackageLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    ProductPackageSubjectQuantitySettingsAvailableItemsProductCategory:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    ProductPackageSubjectQuantitySettingsAvailableItemsProductLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    ProductPackageSubjectQuantitySettingsAvailableItemsProduct:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        billingMethod:
          type: string
        defaultPrice:
          type: number
        categoryType:
          type: string
        lessonsPerTerm:
          type: number
        defaultDuration:
          type: number
        category:
          $ref:
            "#/components/schemas/ProductPackageSubjectQuantitySettingsAvailableItems\
            ProductCategory"
        level:
          $ref:
            "#/components/schemas/ProductPackageSubjectQuantitySettingsAvailableItems\
            ProductLevel"
    ProductPackageSubjectQuantitySettingsAvailableItems:
      type: object
      properties:
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        product:
          $ref:
            "#/components/schemas/ProductPackageSubjectQuantitySettingsAvailableItems\
            Product"
    ProductPackageSubjectQuantitySettingsPriceTier:
      type: object
      properties:
        subjectCount:
          type: number
        totalPrice:
          type: number
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
    ProductPackageSubjectQuantitySettings:
      type: object
      properties:
        totalAvailableItems:
          type: number
        availableItems:
          type: array
          items:
            $ref: "#/components/schemas/ProductPackageSubjectQuantitySettingsAvailableItems"
        priceTier:
          type: array
          items:
            $ref: "#/components/schemas/ProductPackageSubjectQuantitySettingsPriceTier"
    ProductPackageProductsProductCategory:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    ProductPackageProductsProductLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    ProductPackageProductsProduct:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        billingMethod:
          type: string
        defaultPrice:
          type: number
        categoryType:
          type: string
        lessonsPerTerm:
          type: number
        defaultDuration:
          type: number
        category:
          $ref: "#/components/schemas/ProductPackageProductsProductCategory"
        level:
          $ref: "#/components/schemas/ProductPackageProductsProductLevel"
    ProductPackageProductsAvailableItemsProductCategory:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    ProductPackageProductsAvailableItemsProductLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    ProductPackageProductsAvailableItemsProduct:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        billingMethod:
          type: string
        defaultPrice:
          type: number
        categoryType:
          type: string
        lessonsPerTerm:
          type: number
        defaultDuration:
          type: number
        category:
          $ref: "#/components/schemas/ProductPackageProductsAvailableItemsProductCategory"
        level:
          $ref: "#/components/schemas/ProductPackageProductsAvailableItemsProductLevel"
    ProductPackageProductsAvailableItems:
      type: object
      properties:
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        product:
          $ref: "#/components/schemas/ProductPackageProductsAvailableItemsProduct"
    ProductPackageProducts:
      type: object
      properties:
        quantity:
          type: number
        unitPrice:
          type: number
        billingMethod:
          type: string
        subTotal:
          type: number
        description:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        product:
          $ref: "#/components/schemas/ProductPackageProductsProduct"
        availableItems:
          type: array
          items:
            $ref: "#/components/schemas/ProductPackageProductsAvailableItems"
    ProductPackage:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        packageCode:
          type: string
        packageName:
          type: string
        packageType:
          type: string
        packageMethod:
          type: string
        active:
          type: boolean
        description:
          type: string
        amount:
          type: number
        level:
          $ref: "#/components/schemas/ProductPackageLevel"
        subjectQuantitySettings:
          $ref: "#/components/schemas/ProductPackageSubjectQuantitySettings"
        products:
          type: array
          items:
            $ref: "#/components/schemas/ProductPackageProducts"
        more:
          type: object
          default: &a93 {}
      required:
        - packageCode
        - packageName
        - packageType
        - amount
        - level
    ProductPackageAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        packageType:
          type: string
        level:
          $ref: "#/components/schemas/ProductPackageLevel"
        amount:
          type: number
        products:
          type: array
          items:
            $ref: "#/components/schemas/ProductPackageProducts"
      required:
        - _id
        - code
        - label
    PunchCardTeacher:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    PunchCard:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        datetime:
          type: string
        more:
          type: object
          default: {}
        teacher:
          $ref: "#/components/schemas/PunchCardTeacher"
      required:
        - teacher
    PunchCardAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    Race:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        raceCode:
          type: string
        raceName:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
    RaceAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    RefundStudentAgent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    RefundStudentLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    RefundStudentStudentGroup:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    RefundStudent:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
        code:
          type: string
        agent:
          $ref: "#/components/schemas/RefundStudentAgent"
        level:
          $ref: "#/components/schemas/RefundStudentLevel"
        studentGroup:
          $ref: "#/components/schemas/RefundStudentStudentGroup"
      required:
        - _id
    RefundRefundType:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    RefundPreparedBy:
      type: object
      properties:
        _id:
          type: string
        fullName:
          type: string
        uid:
          type: string
    RefundNotified:
      type: object
      properties:
        sent:
          type: boolean
        date:
          type: string
    RefundAgent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    RefundParent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    RefundPayment:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        paymentAmount:
          type: number
    RefundIntegrateSystem:
      type: object
      properties:
        appId:
          type: string
        documentNo:
          type: string
        documentType:
          type: string
        documentId:
          type: string
        documentStatus:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
    RefundDocNoFormat:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
    Refund:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        refundNo:
          type: string
        refundDate:
          type: string
        refundTitle:
          type: string
        refundTotal:
          type: number
        description:
          type: string
        documentStatus:
          type: string
        student:
          $ref: "#/components/schemas/RefundStudent"
        refundType:
          $ref: "#/components/schemas/RefundRefundType"
        preparedBy:
          $ref: "#/components/schemas/RefundPreparedBy"
        notified:
          $ref: "#/components/schemas/RefundNotified"
        agent:
          $ref: "#/components/schemas/RefundAgent"
        parent:
          $ref: "#/components/schemas/RefundParent"
        payment:
          $ref: "#/components/schemas/RefundPayment"
        integrateSystem:
          type: array
          items:
            $ref: "#/components/schemas/RefundIntegrateSystem"
        docNoFormat:
          $ref: "#/components/schemas/RefundDocNoFormat"
        more:
          type: object
          default: {}
      required:
        - refundDate
        - refundTotal
        - description
        - student
        - refundType
        - preparedBy
        - payment
    RefundAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        refundDate:
          type: string
        student:
          $ref: "#/components/schemas/RefundStudent"
        agent:
          $ref: "#/components/schemas/RefundAgent"
        refundTotal:
          type: number
      required:
        - _id
        - code
        - label
    RefundType:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        typeCode:
          type: string
        typeName:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
      required:
        - typeCode
        - typeName
    RefundTypeAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    Religion:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        religionCode:
          type: string
        religionName:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
    ReligionAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    RoomRoomType:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    Room:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        roomNo:
          type: string
        roomName:
          type: string
        capacity:
          type: number
        active:
          type: boolean
        description:
          type: string
        roomType:
          $ref: "#/components/schemas/RoomRoomType"
        more:
          type: object
          default: {}
      required:
        - roomNo
        - roomName
        - roomType
    RoomAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        capacity:
          type: number
      required:
        - _id
        - code
        - label
    RoomType:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        roomTypeNo:
          type: string
        roomTypeName:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
    RoomTypeAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    ScheduleTuitionClass:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        productId:
          type: string
    ScheduleRoom:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    ScheduleTeacher:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    Schedule:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        active:
          type: boolean
        scheduleNo:
          type: number
        termNo:
          type: number
        lessonPlan:
          type: string
        onlineClassUrl:
          type: string
        description:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        duration:
          type: number
        day:
          type: string
        tuitionClass:
          $ref: "#/components/schemas/ScheduleTuitionClass"
        room:
          $ref: "#/components/schemas/ScheduleRoom"
        teacher:
          $ref: "#/components/schemas/ScheduleTeacher"
        more:
          type: object
          default: &a91 {}
    ScheduleAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    ScheduleAttendanceStudentLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    ScheduleAttendanceStudent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        level:
          $ref: "#/components/schemas/ScheduleAttendanceStudentLevel"
    ScheduleAttendanceReplacement:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        day:
          type: string
        teacherName:
          type: string
        roomNo:
          type: string
        description:
          type: string
    ScheduleAttendance:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        scheduleId:
          type: string
        billingId:
          type: string
        enrollmentId:
          type: string
        attend:
          type: boolean
        status:
          type: string
        description:
          type: string
        student:
          $ref: "#/components/schemas/ScheduleAttendanceStudent"
        replacement:
          $ref: "#/components/schemas/ScheduleAttendanceReplacement"
        more:
          type: object
          default: {}
      required:
        - scheduleId
        - billingId
        - enrollmentId
        - status
        - student
    ScheduleAttendanceAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    School:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        schoolCode:
          type: string
        schoolName:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
    SchoolAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    StopEnrollmentStudentLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StopEnrollmentStudent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        level:
          $ref: "#/components/schemas/StopEnrollmentStudentLevel"
      required:
        - _id
    StopEnrollmentStopReason:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StopEnrollment:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        status:
          type: string
        personIncharge:
          type: string
        enrollmentId:
          type: string
        date:
          type: string
        planReturnDate:
          type: string
        description:
          type: string
        student:
          $ref: "#/components/schemas/StopEnrollmentStudent"
        stopReason:
          $ref: "#/components/schemas/StopEnrollmentStopReason"
      required:
        - status
        - personIncharge
        - enrollmentId
        - date
        - student
    StopEnrollmentAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    StopReason:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        reasonCode:
          type: string
        reasonName:
          type: string
        active:
          type: boolean
        description:
          type: string
    StopReasonAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    StudentStudentGroup:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentRace:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentReligion:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentSchool:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentAgent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentStudentSource:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentAddress:
      type: object
      properties:
        street1:
          type: string
        street2:
          type: string
        postCode:
          type: string
        city:
          type: string
        region:
          type: string
        country:
          type: string
    StudentArea:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentParentsParent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentParents:
      type: object
      properties:
        parentType:
          type: string
        relationship:
          type: string
        description:
          type: string
        isDefault:
          type: boolean
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        parent:
          $ref: "#/components/schemas/StudentParentsParent"
      required:
        - parentType
        - parent
    StudentStopReason:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentDocNoFormat:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
    Student:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        studentCode:
          type: string
        studentName:
          type: string
        alternateName:
          type: string
        gender:
          type: string
        email:
          type: string
        mobileNo:
          type: string
        icNumber:
          type: string
        barcode:
          type: string
        dob:
          type: string
        joinDate:
          type: string
        leaveDate:
          type: string
        status:
          type: string
        stopDescription:
          type: string
        planReturnDate:
          type: string
        recurringFeeEndDate:
          type: string
        imageUrl:
          type: string
        studentGroup:
          $ref: "#/components/schemas/StudentStudentGroup"
        level:
          $ref: "#/components/schemas/StudentLevel"
        race:
          $ref: "#/components/schemas/StudentRace"
        religion:
          $ref: "#/components/schemas/StudentReligion"
        school:
          $ref: "#/components/schemas/StudentSchool"
        agent:
          $ref: "#/components/schemas/StudentAgent"
        studentSource:
          $ref: "#/components/schemas/StudentStudentSource"
        address:
          $ref: "#/components/schemas/StudentAddress"
        area:
          $ref: "#/components/schemas/StudentArea"
        parents:
          type: array
          items:
            $ref: "#/components/schemas/StudentParents"
        stopReason:
          $ref: "#/components/schemas/StudentStopReason"
        docNoFormat:
          $ref: "#/components/schemas/StudentDocNoFormat"
        more:
          type: object
          default: &a92 {}
      required:
        - studentName
        - gender
        - dob
        - level
    StudentAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        studentGroup:
          $ref: "#/components/schemas/StudentStudentGroup"
        level:
          $ref: "#/components/schemas/StudentLevel"
        agent:
          $ref: "#/components/schemas/StudentAgent"
      required:
        - _id
        - code
        - label
    StudentDescriptionStudent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    StudentDescriptionPreparedBy:
      type: object
      properties:
        _id:
          type: string
        fullName:
          type: string
        uid:
          type: string
    StudentDescription:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        body:
          type: string
        student:
          $ref: "#/components/schemas/StudentDescriptionStudent"
        preparedBy:
          $ref: "#/components/schemas/StudentDescriptionPreparedBy"
    StudentDescriptionAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    StudentGroup:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        studentGroupCode:
          type: string
        studentGroupName:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
    StudentGroupAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    StudentSource:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        studentSourceCode:
          type: string
        studentSourceName:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
    StudentSourceAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    StudentSummaryActiveEnrollments:
      type: object
      properties:
        enrollmentId:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        label:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
    StudentSummary:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        ledgerAmt:
          type: number
        salesAmt:
          type: number
        documentQty:
          type: number
        enrollmentQty:
          type: number
        activeEnrollments:
          type: array
          items:
            $ref: "#/components/schemas/StudentSummaryActiveEnrollments"
    StudentSummaryAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    TeacherTeacherGroup:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    TeacherBranches:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        branchId:
          type: number
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
    TeacherCommissionSettingSalaryByLevelLevel:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        code:
          type: string
    TeacherCommissionSettingSalaryByLevel:
      type: object
      properties:
        _id:
          type: string
        minStudent:
          type: number
        maxStudent:
          type: number
        hourlyAmount:
          type: number
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        level:
          $ref: "#/components/schemas/TeacherCommissionSettingSalaryByLevelLevel"
    TeacherCommissionSetting:
      type: object
      properties:
        defaultHourlyAmount:
          type: number
        commissionPercentage:
          type: number
        salaryMode:
          type: string
        salaryByLevel:
          type: array
          items:
            $ref: "#/components/schemas/TeacherCommissionSettingSalaryByLevel"
    TeacherDocNoFormat:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
    Teacher:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        teacherCode:
          type: string
        teacherName:
          type: string
        alternateName:
          type: string
        mobileNo:
          type: string
        email:
          type: string
        active:
          type: boolean
        description:
          type: string
        imageUrl:
          type: string
        teacherGroup:
          $ref: "#/components/schemas/TeacherTeacherGroup"
        branches:
          type: array
          items:
            $ref: "#/components/schemas/TeacherBranches"
        commissionSetting:
          $ref: "#/components/schemas/TeacherCommissionSetting"
        docNoFormat:
          $ref: "#/components/schemas/TeacherDocNoFormat"
        more:
          type: object
          default: {}
      required:
        - teacherCode
        - teacherName
        - mobileNo
        - email
        - teacherGroup
        - branches
    TeacherAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        branches:
          type: array
          items:
            $ref: "#/components/schemas/TeacherBranches"
        alternateName:
          type: string
      required:
        - _id
        - code
        - label
    TeacherGroup:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        teacherGroupCode:
          type: string
        teacherGroupName:
          type: string
        active:
          type: boolean
        description:
          type: string
        more:
          type: object
          default: {}
    TeacherGroupAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
      required:
        - _id
        - code
        - label
    TuitionClassAcademySession:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        startDate:
          type: string
        endDate:
          type: string
    TuitionClassProductLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    TuitionClassProduct:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        defaultDuration:
          type: number
        lessonsPerTerm:
          type: number
        billingMethod:
          type: string
        defaultPrice:
          type: number
        level:
          $ref: "#/components/schemas/TuitionClassProductLevel"
    TuitionClassLevel:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    TuitionClassStudentGroup:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    TuitionClassDefaultTeacher:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    TuitionClassDefaultRoom:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        capacity:
          type: number
    TuitionClassScheduleSettingRoom:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        maxStudents:
          type: number
    TuitionClassScheduleSettingTeacher:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
    TuitionClassScheduleSetting:
      type: object
      properties:
        day:
          type: string
        start:
          type: string
        end:
          type: string
        description:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        _id:
          type: string
        room:
          $ref: "#/components/schemas/TuitionClassScheduleSettingRoom"
        teacher:
          $ref: "#/components/schemas/TuitionClassScheduleSettingTeacher"
      required:
        - day
        - start
        - end
    TuitionClassDocNoFormat:
      type: object
      properties:
        _id:
          type: string
        label:
          type: string
    TuitionClass:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        classCode:
          type: string
        className:
          type: string
        classType:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        maxLessons:
          type: number
        originalTuitionClassId:
          type: string
        totalSchedule:
          type: number
        lessonPlanCount:
          type: number
        academySessionClassGeneratorId:
          type: string
        defaultDuration:
          type: number
        billingMethod:
          type: string
        lessonsPerTerm:
          type: number
        defaultStart:
          type: string
        defaultEnd:
          type: string
        active:
          type: boolean
        description:
          type: string
        maxStudents:
          type: number
        academySession:
          $ref: "#/components/schemas/TuitionClassAcademySession"
        product:
          $ref: "#/components/schemas/TuitionClassProduct"
        level:
          $ref: "#/components/schemas/TuitionClassLevel"
        studentGroup:
          $ref: "#/components/schemas/TuitionClassStudentGroup"
        defaultTeacher:
          $ref: "#/components/schemas/TuitionClassDefaultTeacher"
        defaultRoom:
          $ref: "#/components/schemas/TuitionClassDefaultRoom"
        scheduleSetting:
          type: array
          items:
            $ref: "#/components/schemas/TuitionClassScheduleSetting"
        docNoFormat:
          $ref: "#/components/schemas/TuitionClassDocNoFormat"
        more:
          type: object
          default: &a94 {}
      required:
        - classCode
        - classType
        - startDate
        - endDate
        - defaultDuration
        - defaultStart
        - defaultEnd
        - academySession
        - product
        - defaultTeacher
        - defaultRoom
    TuitionClassAutoComplete:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        startDate:
          type: string
        endDate:
          type: string
        level:
          $ref: "#/components/schemas/TuitionClassLevel"
        defaultTeacher:
          $ref: "#/components/schemas/TuitionClassDefaultTeacher"
        studentGroup:
          $ref: "#/components/schemas/TuitionClassStudentGroup"
      required:
        - _id
        - code
        - label
    FinalResponse:
      type: object
      properties:
        success:
          type: array
          items:
            type: string
        errors:
          type: array
          items:
            type: string
      required:
        - success
        - errors
    SystemIntegrateProperties:
      type: object
      properties:
        _id:
          type: string
        documentNo:
          type: string
        documentType:
          type: string
        documentId:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        appId:
          type: string
        documentStatus:
          type: string
      required:
        - _id
        - documentNo
        - documentType
        - documentId
        - created
        - updated
        - createdBy
        - updatedBy
        - appId
        - documentStatus
    BillDocumentType:
      type: object
      properties:
        id:
          type: string
        documentDate:
          type: string
        documentNo:
          type: string
        documentType:
          type: string
        studentName:
          type: string
        levelName:
          type: string
        amount:
          type: number
        batchNo:
          type: string
        status:
          type: string
        integrateSystem:
          type: array
          items:
            $ref: "#/components/schemas/SystemIntegrateProperties"
      required:
        - id
        - documentDate
        - documentNo
        - documentType
        - studentName
        - levelName
        - amount
        - batchNo
        - status
        - integrateSystem
    ForeignKey:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
      required:
        - _id
        - code
        - label
    EnrollmentSchedulesAttendance:
      type: object
      properties:
        _id:
          type: string
        scheduleId:
          type: string
        attend:
          type: boolean
        billingId:
          type: string
        status:
          type: string
        replacement:
          $ref: "#/components/schemas/ScheduleAttendanceReplacement"
        startTime:
          type: string
        endTime:
          type: string
        termNo:
          type: number
        scheduleNo:
          type: number
        active:
          type: boolean
        teacher:
          $ref: "#/components/schemas/ForeignKey"
        room:
          $ref: "#/components/schemas/ForeignKey"
        description:
          type: string
      required:
        - _id
        - scheduleId
        - attend
        - billingId
        - status
        - replacement
        - startTime
        - endTime
        - termNo
        - scheduleNo
        - active
        - teacher
        - room
        - description
    EnrollmentSchedules:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        enrollmentNo:
          type: string
        enrollmentTitle:
          type: string
        academySessionClassGeneratorId:
          type: string
        fee:
          type: number
        billingMethod:
          type: string
        categoryType:
          type: string
        lessonsPerTerm:
          type: number
        startDate:
          type: string
        status:
          type: string
        endDate:
          type: string
        planReturnDate:
          type: string
        restartDate:
          type: string
        stopDescription:
          type: string
        description:
          type: string
        product:
          $ref: "#/components/schemas/EnrollmentProduct"
        package:
          $ref: "#/components/schemas/EnrollmentPackage"
        tuitionClass:
          $ref: "#/components/schemas/EnrollmentTuitionClass"
        student:
          $ref: "#/components/schemas/EnrollmentStudent"
        level:
          $ref: "#/components/schemas/EnrollmentLevel"
        stopReason:
          $ref: "#/components/schemas/EnrollmentStopReason"
        docNoFormat:
          $ref: "#/components/schemas/EnrollmentDocNoFormat"
        billings:
          type: array
          items:
            $ref: "#/components/schemas/BillingSchedule"
        schedules:
          type: array
          items:
            $ref: "#/components/schemas/EnrollmentSchedulesAttendance"
      required:
        - fee
        - billingMethod
        - categoryType
        - startDate
        - status
        - product
        - student
        - level
        - billings
        - schedules
    WorkingHour:
      type: object
      properties:
        day:
          type: string
          enum:
            - ""
            - mon
            - tue
            - wed
            - thu
            - fri
            - sat
            - sun
          description: Day of the week
        start:
          type: string
          format: time
          default: 00:00:00
          description: Start time in HH:mm:ss format
        end:
          type: string
          format: time
          default: 00:00:00
          description: End time in HH:mm:ss format
      required:
        - day
        - start
        - end
    ParentChild:
      type: object
      properties:
        studentId:
          type: string
          description: ID of the student
        studentName:
          type: string
          description: Full name of the student
        studentImage:
          type: string
          description: Student profile image in base64 format
        amount:
          type: number
          default: 0
        levelId:
          type: string
          default: ""
        levelCode:
          type: string
          default: ""
        levelName:
          type: string
          default: ""
      required:
        - studentId
        - studentName
        - studentImage
        - amount
    ParentBranch:
      type: object
      properties:
        branchId:
          type: number
          default: 1
        orgId:
          type: number
          default: 1
        tenantId:
          type: number
          default: 1
        onlinePayment:
          type: boolean
        branchCode:
          type: string
        branchName:
          type: string
        orgRecordId:
          type: string
        orgName:
          type: string
        street1:
          type: string
        street2:
          type: string
        postcode:
          type: string
        city:
          type: string
        tel:
          type: string
        email:
          type: string
        parentId:
          type: string
        parentName:
          type: string
        xOrg:
          type: string
        totalChild:
          type: number
          default: 0
        totalAmount:
          type: number
          default: 0
        image:
          type: string
        region:
          type: string
        offdays:
          type: array
          description: Array of offdays
          example:
            - mon
            - wed
            - fri
          items:
            type: string
            enum:
              - mon
              - tue
              - wed
              - thu
              - fri
              - sat
              - sun
              - ""
        workingHours:
          description: Array of working hours
          type: array
          items:
            $ref: "#/components/schemas/WorkingHour"
        workStart:
          type: string
          format: time
          description: The start time of work
          example: 09:00
        workEnd:
          type: string
          format: time
          description: The end time of work
          example: 17:00
        package:
          type: string
          default: ""
        students:
          description: List of students involved in the branch
          type: array
          items:
            $ref: "#/components/schemas/ParentChild"
      required:
        - branchId
        - orgId
        - tenantId
        - onlinePayment
        - branchCode
        - branchName
        - orgRecordId
        - orgName
        - street1
        - street2
        - postcode
        - city
        - tel
        - email
        - parentId
        - parentName
        - xOrg
        - totalChild
        - totalAmount
        - image
        - region
        - offdays
        - workStart
        - workEnd
        - package
    StudentApiSchedule:
      type: object
      properties:
        _id:
          type: string
        studentId:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        duration:
          type: number
          default: 0
        day:
          type: string
        tuitionClassId:
          type: string
        tuitionClassCode:
          type: string
        tuitionClassName:
          type: string
        teacherId:
          type: string
        teacherCode:
          type: string
        teacherName:
          type: string
        teacherGroup:
          type: string
        roomId:
          type: string
        roomNo:
          type: string
        roomName:
          type: string
        termNo:
          type: number
          default: 0
        scheduleId:
          type: string
        scheduleNo:
          type: number
          default: 0
        scheduleCount:
          type: number
          default: 0
        attend:
          type: boolean
        totalStudent:
          type: number
          default: 0
        totalAttend:
          type: number
          default: 0
        totalJoin:
          type: number
          default: 0
        totalJoinAttend:
          type: number
          default: 0
      required:
        - _id
        - studentId
        - startTime
        - endTime
        - tuitionClassId
        - tuitionClassCode
        - tuitionClassName
        - teacherId
        - teacherCode
        - teacherName
        - teacherGroup
        - roomId
        - roomNo
        - roomName
        - termNo
        - scheduleId
        - scheduleNo
        - scheduleCount
        - attend
        - totalStudent
        - totalAttend
        - totalJoin
        - totalJoinAttend
    UserBranch:
      type: object
      properties:
        _id:
          type: string
        fullName:
          type: string
        orgId:
          type: number
        tenantId:
          type: number
        branchId:
          type: number
        branchCode:
          type: string
        branchName:
          type: string
        orgName:
          type: string
        permission:
          type: array
          items:
            type: string
        xOrg:
          type: string
      required:
        - _id
        - fullName
        - orgId
        - tenantId
        - branchId
        - branchCode
        - branchName
        - orgName
        - permission
        - xOrg
    EnrollmentScheduleAttendance:
      type: object
      properties: {}
    TutorAttendanceSearch:
      type: object
      properties:
        _id:
          type: string
        studentCode:
          type: string
        studentName:
          type: string
        tuitionClassId:
          type: string
        tuitionClassCode:
          type: string
        tuitionClassLabel:
          type: string
        enrollmentId:
          type: string
        enrollmenttransaction:
          type: array
          items:
            $ref: "#/components/schemas/EnrollmentScheduleAttendance"
      required:
        - _id
        - studentCode
        - studentName
        - tuitionClassId
        - tuitionClassCode
        - tuitionClassLabel
        - enrollmentId
        - enrollmenttransaction
    TodayClass:
      type: object
      properties:
        tuitionClassId:
          type: string
        tuitionClassCode:
          type: string
        tuitionClassLabel:
          type: string
        enrollmentId:
          type: string
        enrollmenttransaction:
          type: array
          items:
            $ref: "#/components/schemas/EnrollmentScheduleAttendance"
      required:
        - tuitionClassId
        - tuitionClassCode
        - tuitionClassLabel
        - enrollmentId
        - enrollmenttransaction
    SearchStudent:
      type: object
      properties:
        _id:
          type: string
        studentCode:
          type: string
        studentName:
          type: string
        studentImage:
          type: string
        studentOutstanding:
          type: string
        scanTime:
          type: string
        todayClass:
          type: array
          items:
            $ref: "#/components/schemas/TodayClass"
      required:
        - _id
        - studentCode
        - studentName
        - studentImage
        - studentOutstanding
        - scanTime
        - todayClass
    TutorAttendanceUpdate:
      type: object
      properties:
        studentId:
          type: string
        enrolmentId:
          type: string
        attend:
          type: boolean
      required:
        - studentId
        - enrolmentId
        - attend
    TutorAttendanceRemarkUpdate:
      type: object
      properties:
        studentId:
          type: string
        enrolmentId:
          type: string
        remark:
          type: string
      required:
        - studentId
        - enrolmentId
        - remark
    TutorScheduleLessonPlanUpdate:
      type: object
      properties:
        lessonPlan:
          type: string
        description:
          type: string
      required:
        - lessonPlan
        - description
    ParentInAttendance:
      type: object
      properties:
        _id:
          type: string
        parentName:
          type: string
        email:
          type: string
        mobileNo:
          type: string
      required:
        - _id
        - parentName
        - email
        - mobileNo
    TutorScheduleAttendance:
      type: object
      properties:
        schedule:
          type: array
          items:
            $ref: "#/components/schemas/TutorScheduleLessonPlanUpdate"
        parent:
          type: array
          items:
            $ref: "#/components/schemas/ParentInAttendance"
      required:
        - schedule
        - parent
    RequestOnlinePaymentParent:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
      required:
        - _id
        - name
    RequestOnlinePaymentStudent:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        name:
          type: string
      required:
        - _id
        - code
        - name
    RequestOnlinePaymentInvoice:
      type: object
      properties:
        _id:
          type: string
        invoiceNo:
          type: string
        invoiceDate:
          type: string
          format: date
        amount:
          type: number
          description: Invoice's original amount
        knockOffAmt:
          type: number
          description: Invoice's amount to be paid
      required:
        - _id
        - invoiceNo
        - invoiceDate
        - amount
        - knockOffAmt
    RequestOnlinePaymentBody:
      type: object
      properties:
        datetime:
          type: string
          format: datetime
          description: Online Payment Date Time (Default now)
          default: 2000-01-01T00:00:00.000Z
        email:
          type: string
          format: email
          description: Payer's email
        amount:
          type: number
          description: Total amount to be paid
        redirectURL:
          type: string
          description: Frontend's redirectURL
        parent:
          $ref: "#/components/schemas/RequestOnlinePaymentParent"
        student:
          $ref: "#/components/schemas/RequestOnlinePaymentStudent"
        invoices:
          type: array
          items:
            $ref: "#/components/schemas/RequestOnlinePaymentInvoice"
        source:
          type: string
          description: From which system
          nullable: true
      required:
        - email
        - amount
        - parent
        - student
        - invoices
    OnlinePaymentPaymentGateway:
      type: object
      properties:
        name:
          type: string
        html:
          type: string
        data:
          type: object
      required:
        - name
        - html
    OnlinePaymentData:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        onlinePaymentNo:
          type: string
          description: Online Payment No.
          format: documentno
        datetime:
          type: string
          description: Online Payment Date Time
          format: date-time
        email:
          type: string
          description: Payer's email
          format: email
        currency:
          type: string
        amount:
          type: string
        redirectURL:
          type: string
        status:
          type: string
          default: new
          enum:
            - new
            - payment_pending
            - payment_success
            - payment_failed
            - receipt_failed
            - complete
        failReason:
          type: string
          nullable: true
        paymentGateway:
          $ref: "#/components/schemas/OnlinePaymentPaymentGateway"
      required:
        - _id
        - onlinePaymentNo
        - datetime
        - email
        - currency
        - amount
        - status
        - paymentGateway
    RequestOnlinePaymentResponse:
      type: object
      properties:
        onlinePayment:
          $ref: "#/components/schemas/OnlinePaymentData"
        student:
          $ref: "#/components/schemas/RequestOnlinePaymentStudent"
        invoices:
          type: array
          items:
            $ref: "#/components/schemas/RequestOnlinePaymentInvoice"
      required:
        - onlinePayment
        - student
        - invoices
    OnlinePaymentValidateData:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        onlinePaymentNo:
          type: string
          description: Online Payment No. (Auto generate if empty.)
          format: documentno
        status:
          type: string
          default: new
          enum:
            - new
            - payment_pending
            - payment_success
            - payment_failed
            - receipt_failed
            - complete
        failReason:
          type: string
        receiptId:
          type: string
        receiptNo:
          type: string
        receiptDate:
          type: string
      required:
        - _id
        - onlinePaymentNo
        - status
    ValidateOnlinePaymentResponse:
      type: object
      properties:
        onlinePayment:
          $ref: "#/components/schemas/OnlinePaymentValidateData"
      required:
        - onlinePayment
    OnlinePaymentFilter:
      type: object
      properties:
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
        status:
          type: string
          default: new
        studentIdArr:
          description: Array of student IDs
          type: array
          items:
            type: string
      required:
        - dateFrom
        - dateTo
    OnlineMonitoringData:
      type: object
      properties:
        _id:
          type: string
          description: Online Payment id
        created:
          type: string
        paymentGatewayName:
          type: string
        onlinePaymentNo:
          type: string
          description: Online Payment No. (Auto generate if empty.)
          format: documentno
        paymentGatewayDate:
          type: string
          format: datetime
          description: Gateway date
          default: 2000-01-01T00:00:00.000Z
        paymentGatewayResponseDate:
          type: string
          format: datetime
          description: Gateway response date
          default: 2000-01-01T00:00:00.000Z
        paymentGatewayTransNo:
          type: string
        status:
          type: string
          default: new
          enum:
            - new
            - payment_pending
            - payment_success
            - payment_failed
            - receipt_failed
            - complete
        receiptNo:
          type: string
          default: ""
        receiptDate:
          type: string
          format: date
        receiptStatus:
          type: string
          default: ""
        studentCode:
          type: string
          default: ""
        studentName:
          type: string
          default: ""
        amount:
          type: number
          description: online payment amount
        studentId:
          type: string
          default: ""
        parent:
          $ref: "#/components/schemas/RequestOnlinePaymentParent"
        invoices:
          type: array
          items:
            $ref: "#/components/schemas/RequestOnlinePaymentInvoice"
      required:
        - _id
        - created
        - paymentGatewayName
        - onlinePaymentNo
        - paymentGatewayTransNo
        - status
        - receiptNo
        - receiptDate
        - receiptStatus
        - studentCode
        - studentName
        - amount
        - studentId
        - parent
        - invoices
    CodeLabelValue:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        value:
          type: number
      required:
        - _id
        - code
        - label
        - value
    FrontendAsset:
      type: object
      properties:
        assets:
          type: array
          items:
            type: string
    MicroFrontendAssetsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/FrontendAsset"
        error:
          type: string
        implementationDate:
          type: string
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
    EInvoiceStatus:
      type: object
      properties:
        status:
          type: string
        uuid:
          type: string
        longId:
          type: string
        sessionId:
          type: string
        submissionType:
          type: string
        error:
          type: array
          items:
            $ref: "#/components/schemas/Error"
        issueTime:
          type: string
        excludeReason:
          type: string
    Data:
      type: object
      properties:
        documentNo:
          type: string
        documentType:
          type: string
        documentDate:
          type: string
        documentStatus:
          type: array
          items:
            type: string
        eInvoiceStatus:
          $ref: "#/components/schemas/EInvoiceStatus"
    EinvoiceRecordSummary:
      type: object
      properties:
        ts:
          type: string
        elapsed:
          type: string
        restStatus:
          type: string
        status:
          type: string
        totalRecords:
          type: number
        data:
          $ref: "#/components/schemas/Data"
    EinvoiceRecordURLResponse:
      type: object
      properties:
        uuid:
          type: string
        longId:
          type: string
        status:
          type: string
        url:
          type: string
        issueTime:
          type: string
        submissionType:
          type: string
    EinvoiceDashboardDataList:
      type: object
      properties:
        documentType:
          type: object
          additionalProperties:
            type: string
      required:
        - documentType
    EinvoiceDashboardDocList:
      type: object
      properties:
        documentType:
          type: string
        documentId:
          type: string
        documentNo:
          type: string
        documentDate:
          type: string
        businessPartnerId:
          type: string
        businessPartnerName:
          type: string
        currency:
          type: string
        totalAmount:
          type: string
    EinvoiceDashboardSync:
      type: object
      properties:
        document_type:
          type: string
        document_id:
          type: string
        document_date:
          type: string
      required:
        - document_type
        - document_id
    EinvoiceCancelRequest:
      type: object
      properties:
        id:
          type: string
        documentType:
          type: string
        reason:
          type: string
      required:
        - id
        - documentType
        - reason
    OutstandingSetting:
      type: object
      properties:
        enable:
          type: boolean
          default: false
        cron:
          type: array
          items:
            type: string
      required:
        - enable
        - cron
    OutstandingSettingResponse:
      type: object
      properties:
        enable:
          type: boolean
          default: false
        cron:
          type: array
          items:
            type: string
      required:
        - enable
        - cron
    UploadPhoto:
      type: object
      properties:
        filename:
          type: string
          nullable: true
        base64Image:
          type: string
      required:
        - base64Image
    WebhookLog:
      type: object
      properties:
        _id:
          type: string
          format: uuid
          default: ""
        webHookId:
          type: string
          default: ""
        dataId:
          type: string
          default: ""
        created:
          type: string
          default: ""
        updated:
          type: string
          default: ""
        createdBy:
          type: string
          default: ""
        updatedBy:
          type: string
          default: ""
        tenantId:
          type: number
          default: 1
        orgId:
          type: number
          default: 1
        branchId:
          type: number
          default: 1
        title:
          type: string
          default: ""
        resource:
          type: string
          default: ""
        actionName:
          type: string
          default: ""
        statusCode:
          type: number
          default: 0
        status:
          type: string
          default: ""
        body:
          type: string
          format: text
          default: ""
        msg:
          type: string
          default: ""
      required:
        - webHookId
        - dataId
        - title
        - body
        - msg
    TuitionClassWithSummary:
      type: object
      properties:
        _id:
          type: string
        classCode:
          type: string
        className:
          type: string
        classType:
          type: string
        product:
          $ref: "#/components/schemas/TuitionClassProduct"
        startDate:
          type: string
        endDate:
          type: string
        level:
          $ref: "#/components/schemas/TuitionClassLevel"
        studentGroup:
          $ref: "#/components/schemas/TuitionClassStudentGroup"
        defaultTeacher:
          $ref: "#/components/schemas/TuitionClassDefaultTeacher"
        defaultRoom:
          $ref: "#/components/schemas/TuitionClassDefaultRoom"
        scheduleSetting:
          type: array
          items:
            $ref: "#/components/schemas/TuitionClassScheduleSetting"
        active:
          type: boolean
        totalStudents:
          type: number
        totalSchedules:
          type: number
      required:
        - _id
        - classCode
        - className
        - classType
        - product
        - startDate
        - endDate
        - level
        - studentGroup
        - defaultTeacher
        - defaultRoom
        - scheduleSetting
        - active
        - totalStudents
        - totalSchedules
    QueueJobProducerResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        processor:
          type: string
      required:
        - id
        - name
        - processor
    ClassGenerateHistory:
      type: object
      properties:
        _id:
          type: string
        updated:
          type: string
        fromAcademySessionId:
          type: string
        fromAcademySessionName:
          type: string
        toAcademySessionId:
          type: string
        toAcademySessionName:
          type: string
        migrateEnrollment:
          type: boolean
        classQuantity:
          type: number
        enrollmentQuantity:
          type: number
        status:
          type: string
      required:
        - _id
        - updated
        - fromAcademySessionId
        - fromAcademySessionName
        - toAcademySessionId
        - toAcademySessionName
        - migrateEnrollment
        - classQuantity
        - enrollmentQuantity
        - status
    OutstandingByStudentInvoice:
      type: object
      properties:
        _id:
          type: string
          default: ""
        code:
          type: string
          default: ""
        label:
          type: string
          default: ""
        date:
          type: string
          default: ""
        amount:
          type: number
          default: ""
      required:
        - _id
        - code
        - label
        - date
        - amount
    OutstandingByStudent:
      type: object
      properties:
        _id:
          type: string
          default: ""
        student:
          $ref: "#/components/schemas/InvoiceStudent"
        level:
          $ref: "#/components/schemas/ForeignKey"
        totalAmt:
          type: number
          default: 0
        invoices:
          default: 0
          type: array
          items:
            $ref: "#/components/schemas/OutstandingByStudentInvoice"
      required:
        - _id
        - student
        - level
        - totalAmt
        - invoices
    AnnouncementResponse:
      type: object
      properties:
        _id:
          type: string
          default: ""
        announcementNo:
          type: string
          default: ""
        title:
          type: string
          default: ""
        body:
          type: string
          default: ""
        preparedBy:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/ForeignKey"
        announcementtype:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/ForeignKey"
        announcementDate:
          type: string
          default: ""
        closeDate:
          type: string
          default: ""
        read:
          type: boolean
          examples:
            - true
          default: false
        target:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/ForeignKey"
      required:
        - _id
        - announcementNo
        - title
        - body
        - announcementDate
        - closeDate
    SystemInboxResponse:
      type: object
      properties:
        _id:
          type: string
          default: ""
        title:
          type: string
          default: ""
        body:
          type: string
          default: ""
        type:
          type: string
          default: ""
        announcementNo:
          type: string
          default: ""
        preparedBy:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/ForeignKey"
        announcementtype:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/ForeignKey"
        announcementDate:
          type: string
          default: ""
        closeDate:
          type: string
          default: ""
        created:
          type: string
          default: ""
        createdBy:
          type: string
          default: ""
        read:
          type: boolean
          examples:
            - true
          default: false
      required:
        - _id
        - title
        - body
        - type
        - announcementNo
        - announcementDate
        - closeDate
        - created
        - createdBy
    UniqueKeyExistResponse:
      type: object
      properties: {}
    TokenCredential:
      type: object
      properties:
        email:
          type: string
          default: ""
        messagingToken:
          type: string
          default: ""
      required:
        - email
        - messagingToken
    DateRangeFilter:
      type: object
      properties:
        dateFrom:
          type: string
        dateTo:
          type: string
      required:
        - dateFrom
        - dateTo
    StudentBillingSchedules:
      type: object
      properties:
        _id:
          type: string
          default: ""
        billingMethod:
          type: string
          default: ""
        billingId:
          type: string
          default: ""
        startDate:
          type: string
          default: ""
        endDate:
          type: string
          default: ""
        enrollmentId:
          type: string
          default: ""
        fee:
          type: number
          default: ""
        invoice:
          default: ""
          allOf:
            - $ref: "#/components/schemas/BillingScheduleInvoice"
        product:
          default: ""
          allOf:
            - $ref: "#/components/schemas/EnrollmentProduct"
      required:
        - _id
        - billingMethod
        - billingId
        - startDate
        - endDate
        - enrollmentId
        - fee
        - invoice
        - product
    BillSummaryByStudent:
      type: object
      properties:
        studentId:
          type: string
          default: ""
        studentCode:
          type: string
          default: ""
        studentName:
          type: string
          default: ""
        alternateName:
          type: string
          default: ""
        schedules:
          default: ""
          type: array
          items:
            $ref: "#/components/schemas/StudentBillingSchedules"
        totalUnBill:
          type: number
          default: ""
        totalFee:
          type: number
          default: ""
        invoices:
          default: ""
          type: array
          items:
            $ref: "#/components/schemas/BillingScheduleInvoice"
      required:
        - studentId
        - studentCode
        - studentName
        - alternateName
        - schedules
        - totalUnBill
        - totalFee
        - invoices
    BillingData:
      type: object
      properties:
        studentId:
          type: string
        billingIds:
          type: array
          items:
            type: string
    GenerateBulkInvoice:
      type: object
      properties:
        dateRange:
          $ref: "#/components/schemas/DateRangeFilter"
        setting:
          type: array
          items:
            $ref: "#/components/schemas/BillingData"
    BulkGenerateInvoiceHistoryDetail:
      type: object
      properties:
        invoiceId:
          type: string
          default: ""
        invoiceNo:
          type: string
          default: ""
        invoiceDate:
          type: string
          default: ""
        invoiceTotal:
          type: number
          default: ""
      required:
        - invoiceId
        - invoiceNo
        - invoiceDate
        - invoiceTotal
    BulkGenerateInvoiceHistory:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        actionType:
          type: string
        status:
          type: string
        startActionTime:
          type: string
        endActionTime:
          type: string
        requestBody:
          type: string
        data:
          type: object
          default: *a89
        invoices:
          default: ""
          type: array
          items:
            $ref: "#/components/schemas/BulkGenerateInvoiceHistoryDetail"
      required:
        - actionType
        - status
        - invoices
    SearchWithRelationRoot:
      type: object
      properties:
        filter:
          type: object
          nullable: true
          description: Mongo filter object
          example:
            levelCode: L1
        projection:
          type: object
          nullable: true
          description: Mongo projection object
          example:
            levelName: 1
        sort:
          type: object
          nullable: true
          description: Mongo sort object
          example:
            levelName: 1
    SearchWithRelationRelation:
      type: object
      properties:
        filter:
          type: object
          nullable: true
          description: Mongo filter for relation
          example:
            productCode: P1
        projection:
          type: object
          nullable: true
          description: Mongo projection for relation
          example:
            productName: 1
        sort:
          type: object
          nullable: true
          description: Mongo sort for relation
          example:
            productName: 1
    SearchLevelWithRelation:
      type: object
      properties:
        product:
          $ref: "#/components/schemas/SearchWithRelationRelation"
        student:
          $ref: "#/components/schemas/SearchWithRelationRelation"
    SearchLevelWithRelations:
      type: object
      properties:
        root:
          $ref: "#/components/schemas/SearchWithRelationRoot"
        relations:
          $ref: "#/components/schemas/SearchLevelWithRelation"
      required:
        - root
    LevelWithRelation:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        levelCode:
          type: string
        levelName:
          type: string
        active:
          type: boolean
        description:
          type: string
        nextLevel:
          $ref: "#/components/schemas/LevelNextLevel"
        more:
          type: object
          default: *a90
        _product:
          nullable: true
          type: array
          items:
            $ref: "#/components/schemas/Product"
        _student:
          nullable: true
          type: array
          items:
            $ref: "#/components/schemas/Student"
    ImportParent:
      type: object
      properties:
        parentName:
          type: string
        email:
          type: string
        mobileNo:
          type: string
        studentCode:
          type: string
          description: support multiple, separate by ","
        occupation:
          type: string
        gender:
          type: string
        active:
          type: number
        description:
          type: string
        identityNo:
          type: string
        tinNo:
          type: string
      required:
        - parentName
        - email
        - mobileNo
    ImportErrorMessgeError:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    ImportErrorMessage:
      type: object
      properties:
        code:
          type: string
        label:
          type: string
        message:
          type: string
        error:
          $ref: "#/components/schemas/ImportErrorMessgeError"
      required:
        - code
        - label
        - message
        - error
    ImportProduct:
      type: object
      properties:
        productCode:
          type: string
        productName:
          type: string
        defaultPrice:
          type: number
        billingMethod:
          type: string
        defaultDuration:
          type: number
        lessonsPerTerm:
          type: number
        active:
          type: number
        description:
          type: string
        categoryCode:
          type: string
        categoryName:
          type: string
          description: if code not exist, will using code, label and type create new data
        categoryType:
          type: string
          enum:
            - recurringFee
            - class
            - charge
          description: if code not exist, will using code, label and type create new data
        levelCode:
          type: string
        levelName:
          type: string
      required:
        - productCode
        - productName
        - defaultPrice
        - billingMethod
        - categoryCode
        - categoryType
    ScheduleListItem:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        startTime:
          type: string
          format: datetime
        endTime:
          type: string
          format: datetime
        day:
          type: string
        duration:
          type: number
          default: 0
        studentQuantity:
          type: number
          default: 0
        maxStudents:
          type: number
          default: 0
        tuitionClass:
          $ref: "#/components/schemas/ForeignKey"
        teacher:
          $ref: "#/components/schemas/ForeignKey"
        room:
          $ref: "#/components/schemas/ForeignKey"
        active:
          type: boolean
        description:
          type: string
      required:
        - _id
        - startTime
        - endTime
        - day
        - duration
        - studentQuantity
        - maxStudents
        - tuitionClass
        - teacher
        - room
        - active
        - description
    AttendanceStudentsReplacement:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        label:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        day:
          type: string
        teacherName:
          type: string
        roomNo:
          type: string
        description:
          type: string
      required:
        - _id
        - code
        - label
        - startTime
        - endTime
        - day
        - teacherName
        - roomNo
        - description
    AttendanceStudent:
      type: object
      properties:
        enrollmentId:
          type: string
        attend:
          type: boolean
        status:
          type: string
        description:
          type: string
        _id:
          type: string
        student:
          $ref: "#/components/schemas/ForeignKey"
        replacement:
          $ref: "#/components/schemas/AttendanceStudentsReplacement"
      required:
        - enrollmentId
        - attend
        - status
        - description
        - _id
        - student
        - replacement
    Attendance:
      type: object
      properties:
        _id:
          type: string
        termNo:
          type: number
        scheduleNo:
          type: number
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        startTime:
          type: string
        endTime:
          type: string
        day:
          type: string
        onlineClassUrl:
          type: string
        duration:
          type: number
        teacher:
          $ref: "#/components/schemas/ScheduleTeacher"
        room:
          $ref: "#/components/schemas/ScheduleRoom"
        studentQty:
          type: number
        presentQty:
          type: number
        presentPercent:
          type: number
        maxStudents:
          type: number
        lessonPlan:
          type: string
        active:
          type: boolean
        attDescription:
          type: string
        description:
          type: string
        tuitionClass:
          $ref: "#/components/schemas/ScheduleTuitionClass"
        students:
          type: array
          items:
            $ref: "#/components/schemas/AttendanceStudent"
      required:
        - _id
        - termNo
        - scheduleNo
        - tenantId
        - orgId
        - branchId
        - startTime
        - endTime
        - day
        - onlineClassUrl
        - duration
        - teacher
        - room
        - studentQty
        - presentQty
        - presentPercent
        - maxStudents
        - lessonPlan
        - active
        - attDescription
        - description
        - tuitionClass
        - students
    DailyAttendance:
      type: object
      properties:
        day:
          type: string
          default: ""
        previous:
          type: string
          default: ""
        current:
          type: string
          default: ""
        absent:
          type: number
          default: 0
        attendanceRate:
          type: number
          default: 0
        attendanceRatePrevious:
          type: number
          default: 0
      required:
        - day
        - previous
        - current
        - absent
        - attendanceRate
        - attendanceRatePrevious
    AttendanceReport:
      type: object
      properties:
        datetime:
          type: string
          default: ""
        data:
          type: array
          items:
            $ref: "#/components/schemas/DailyAttendance"
      required:
        - datetime
        - data
    PrintAttendanceFilter:
      type: object
      properties:
        tuitionClassIds:
          default: ""
          type: array
          items:
            type: string
        dateFrom:
          type: string
          default: ""
        dateTo:
          type: string
          default: ""
        columns:
          type: number
          default: ""
      required:
        - tuitionClassIds
        - dateFrom
        - dateTo
        - columns
    SearchScheduleWithRelation:
      type: object
      properties:
        tuitionClass:
          $ref: "#/components/schemas/SearchWithRelationRelation"
    SearchScheduleWithRelations:
      type: object
      properties:
        root:
          $ref: "#/components/schemas/SearchWithRelationRoot"
        relations:
          $ref: "#/components/schemas/SearchScheduleWithRelation"
      required:
        - root
    ScheduleWithRelation:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        active:
          type: boolean
        scheduleNo:
          type: number
        termNo:
          type: number
        lessonPlan:
          type: string
        onlineClassUrl:
          type: string
        description:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        duration:
          type: number
        day:
          type: string
        tuitionClass:
          $ref: "#/components/schemas/ScheduleTuitionClass"
        room:
          $ref: "#/components/schemas/ScheduleRoom"
        teacher:
          $ref: "#/components/schemas/ScheduleTeacher"
        more:
          type: object
          default: *a91
        _tuitionClass:
          nullable: true
          type: array
          items:
            $ref: "#/components/schemas/TuitionClass"
    OutstandingInvoice:
      type: object
      properties:
        _id:
          type: string
          default: ""
        invoiceNo:
          type: string
          default: ""
        invoiceDate:
          type: string
          default: ""
        invoiceTotal:
          type: number
          default: 0
        invoiceTitle:
          type: string
          default: ""
        description:
          type: string
          default: ""
        balance:
          type: number
          default: 0
        selected:
          type: boolean
        knockOffAmt:
          type: number
          default: 0
        newBalance:
          type: number
          default: 0
      required:
        - _id
        - invoiceNo
        - invoiceDate
        - invoiceTotal
        - invoiceTitle
        - description
        - balance
        - selected
        - knockOffAmt
        - newBalance
    StudentWithSummary:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        studentCode:
          type: string
        studentName:
          type: string
        alternateName:
          type: string
        gender:
          type: string
        email:
          type: string
        mobileNo:
          type: string
        icNumber:
          type: string
        barcode:
          type: string
        dob:
          type: string
        joinDate:
          type: string
        leaveDate:
          type: string
        status:
          type: string
        stopDescription:
          type: string
        planReturnDate:
          type: string
        recurringFeeEndDate:
          type: string
        imageUrl:
          type: string
        studentGroup:
          $ref: "#/components/schemas/StudentStudentGroup"
        level:
          $ref: "#/components/schemas/StudentLevel"
        race:
          $ref: "#/components/schemas/StudentRace"
        religion:
          $ref: "#/components/schemas/StudentReligion"
        school:
          $ref: "#/components/schemas/StudentSchool"
        agent:
          $ref: "#/components/schemas/StudentAgent"
        studentSource:
          $ref: "#/components/schemas/StudentStudentSource"
        address:
          $ref: "#/components/schemas/StudentAddress"
        area:
          $ref: "#/components/schemas/StudentArea"
        parents:
          type: array
          items:
            $ref: "#/components/schemas/StudentParents"
        stopReason:
          $ref: "#/components/schemas/StudentStopReason"
        docNoFormat:
          $ref: "#/components/schemas/StudentDocNoFormat"
        more:
          type: object
          default: *a92
        parentsInfo:
          type: array
          items:
            $ref: "#/components/schemas/Parent"
        ledgerAmt:
          type: number
          default: 0
        documentQty:
          type: number
          default: 0
        salesAmt:
          type: number
          default: 0
        enrollmentQty:
          type: number
          default: 0
        activeEnrollments:
          type: array
          items:
            $ref: "#/components/schemas/StudentSummaryActiveEnrollments"
      required:
        - studentName
        - gender
        - dob
        - level
        - parentsInfo
        - ledgerAmt
        - documentQty
        - salesAmt
        - enrollmentQty
        - activeEnrollments
    StudentListItemWithSummary:
      type: object
      properties:
        _id:
          type: string
        studentCode:
          type: string
        studentName:
          type: string
        alternateName:
          type: string
        imageUrl:
          type: string
        status:
          type: string
        level:
          $ref: "#/components/schemas/ForeignKey"
        studentGroup:
          $ref: "#/components/schemas/ForeignKey"
        email:
          type: string
        gender:
          type: string
        documentQty:
          type: number
          default: 0
        ledgerAmt:
          type: number
          default: 0
        outstandingAmount:
          type: number
          default: 0
        totalInvoiceAmount:
          type: number
          default: 0
        totalInvoiceQuantity:
          type: number
          default: 0
        totalEnrollment:
          type: number
          default: 0
        totalActiveEnrollment:
          type: number
          default: 0
      required:
        - _id
        - studentCode
        - studentName
        - alternateName
        - imageUrl
        - status
        - level
        - studentGroup
        - email
        - gender
        - documentQty
        - ledgerAmt
    EnrollmentItem:
      type: object
      properties:
        _id:
          type: string
        enrollmentBillingId:
          type: string
        product:
          $ref: "#/components/schemas/ForeignKey"
        tuitionClass:
          $ref: "#/components/schemas/ForeignKey"
        package:
          $ref: "#/components/schemas/ForeignKey"
        level:
          $ref: "#/components/schemas/ForeignKey"
        category:
          $ref: "#/components/schemas/ForeignKey"
        fee:
          type: number
          default: 0
        categoryType:
          type: string
          default: ""
        startDate:
          type: string
          default: ""
        endDate:
          type: string
          default: ""
        billings:
          type: array
          items:
            $ref: "#/components/schemas/BillingSchedule"
        billingMethod:
          type: string
          default: ""
        lessonsPerTerm:
          type: number
          default: 0
        status:
          type: string
          default: ""
        description:
          type: string
          default: ""
        teacher:
          $ref: "#/components/schemas/ForeignKey"
        selected:
          type: boolean
      required:
        - _id
        - product
        - tuitionClass
        - package
        - level
        - category
        - fee
        - categoryType
        - startDate
        - endDate
        - billings
        - billingMethod
        - lessonsPerTerm
        - status
        - description
        - teacher
        - selected
    BillingHistoryItem:
      type: object
      properties:
        _id:
          type: string
          default: ""
        docType:
          type: string
          default: ""
        docNo:
          type: string
          default: ""
        docDate:
          type: string
          default: ""
        description:
          type: string
          default: ""
        docTotal:
          type: number
          default: ""
        docStatus:
          type: string
          default: ""
        isOnlinePayment:
          type: boolean
          default: ""
      required:
        - _id
        - docType
        - docNo
        - docDate
        - description
        - docTotal
        - docStatus
        - isOnlinePayment
    NewProductEnrollment:
      type: object
      properties:
        product:
          $ref: "#/components/schemas/EnrollmentProduct"
        package:
          $ref: "#/components/schemas/ForeignKey"
        tuitionClass:
          $ref: "#/components/schemas/EnrollmentTuitionClass"
        fee:
          type: number
          default: 0
        lessonsPerTerm:
          type: number
          default: 0
        categoryType:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        description:
          type: string
      required:
        - product
        - fee
        - lessonsPerTerm
        - categoryType
        - startDate
        - endDate
        - description
    ImportStudent:
      type: object
      properties:
        studentCode:
          type: string
        studentName:
          type: string
        alternateName:
          type: string
        gender:
          type: string
        email:
          type: string
        mobileNo:
          type: string
        icNumber:
          type: string
        joinDate:
          type: string
        dob:
          type: string
        active:
          type: number
        barcode:
          type: string
        studentGroupCode:
          type: string
        studentGroupName:
          type: string
        studentLevelCode:
          type: string
        studentLevelName:
          type: string
        studentRaceCode:
          type: string
        studentRaceName:
          type: string
        studentReligionCode:
          type: string
        studentReligionName:
          type: string
        studentSchoolCode:
          type: string
        studentSchoolName:
          type: string
        studentAddressStreet1:
          type: string
        studentAddressStreet2:
          type: string
        studentAddressPostCode:
          type: string
        studentAddressCity:
          type: string
        studentAddressRegion:
          type: string
        studentAddressCountry:
          type: string
        studentAddressAreaCode:
          type: string
        studentAddressAreaName:
          type: string
      required:
        - studentCode
        - studentName
        - gender
        - joinDate
        - dob
        - active
        - barcode
        - studentLevelCode
        - studentLevelName
    UpgradeStudentLevelRequestBody:
      type: object
      properties:
        levelIds:
          type: array
          items:
            type: string
    PackageEnrollToIndividual:
      type: object
      properties:
        studentId:
          type: string
        packageId:
          type: string
        stopReason:
          $ref: "#/components/schemas/ForeignKey"
        effectiveDate:
          type: string
      required:
        - studentId
        - packageId
        - stopReason
        - effectiveDate
    Modification:
      type: object
      properties:
        action:
          type: string
        new:
          $ref: "#/components/schemas/NewProductEnrollment"
        deleteEnrolId:
          type: string
      required:
        - action
    PackageModified:
      type: object
      properties:
        studentId:
          type: string
        packageId:
          type: string
        modificaction:
          type: array
          items:
            $ref: "#/components/schemas/Modification"
        stopReason:
          $ref: "#/components/schemas/ForeignKey"
        effectiveDate:
          type: string
      required:
        - studentId
        - packageId
        - modificaction
    ChangePlan:
      type: object
      properties:
        action:
          type: string
        new:
          $ref: "#/components/schemas/NewProductEnrollment"
        stop:
          type: string
        alacart:
          type: string
        remain:
          $ref: "#/components/schemas/NewProductEnrollment"
        row:
          type: number
      required:
        - action
    PackageChanged:
      type: object
      properties:
        studentId:
          type: string
        previouspackageId:
          type: string
        newpackageId:
          type: string
        changePlan:
          type: array
          items:
            $ref: "#/components/schemas/ChangePlan"
        stopReason:
          $ref: "#/components/schemas/ForeignKey"
        effectiveDate:
          type: string
      required:
        - studentId
        - previouspackageId
        - newpackageId
        - changePlan
    AvailablePackageResponse:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        packageCode:
          type: string
        packageName:
          type: string
        packageType:
          type: string
        packageMethod:
          type: string
        active:
          type: boolean
        description:
          type: string
        amount:
          type: number
        level:
          $ref: "#/components/schemas/ProductPackageLevel"
        subjectQuantitySettings:
          $ref: "#/components/schemas/ProductPackageSubjectQuantitySettings"
        products:
          type: array
          items:
            $ref: "#/components/schemas/ProductPackageProducts"
        more:
          type: object
          default: *a93
        preferProduct:
          description: Ordered product IDs matching the package slot arrangement
          type: array
          items:
            type: string
      required:
        - packageCode
        - packageName
        - packageType
        - amount
        - level
        - preferProduct
    IndividualtoPackage:
      type: object
      properties:
        studentId:
          type: string
        packageId:
          type: string
        effectiveDate:
          type: string
        preferProduct:
          type: array
          items:
            type: string
      required:
        - studentId
        - packageId
        - preferProduct
    AssignSummary:
      type: object
      properties:
        teacherId:
          type: string
          default: ""
        teacherCode:
          type: string
          default: ""
        teacherName:
          type: string
          default: ""
        numClass:
          type: number
          default: 0
      required:
        - teacherId
        - teacherCode
        - teacherName
        - numClass
    ClassDetails:
      type: object
      properties:
        teacherId:
          type: string
          default: ""
        teacherCode:
          type: string
          default: ""
        teacherName:
          type: string
          default: ""
        classId:
          type: string
          default: ""
        classCode:
          type: string
          default: ""
        className:
          type: string
          default: ""
        productId:
          type: string
          default: ""
        productCode:
          type: string
          default: ""
        productName:
          type: string
          default: ""
        numStudent:
          type: number
          default: 0
      required:
        - teacherId
        - teacherCode
        - teacherName
        - classId
        - classCode
        - className
        - productId
        - productCode
        - productName
        - numStudent
    TeacherPerformance:
      type: object
      properties:
        datetime:
          type: string
          default: ""
        totalTeacher:
          type: number
          default: 0
        totalTeacherGroup:
          type: number
          default: 0
        totalLessons:
          type: number
          default: 0
        totalDuration:
          type: number
          default: 0
        totalStudentsByClass:
          type: number
          default: 0
        lessons:
          type: array
          items:
            $ref: "#/components/schemas/AssignSummary"
        assign:
          type: array
          items:
            $ref: "#/components/schemas/AssignSummary"
        classDetails:
          type: array
          items:
            $ref: "#/components/schemas/ClassDetails"
      required:
        - datetime
        - totalTeacher
        - totalTeacherGroup
        - totalLessons
        - totalDuration
        - totalStudentsByClass
        - lessons
        - assign
        - classDetails
    AttendanceSummaryByTeacher:
      type: object
      properties:
        datetime:
          type: string
          default: ""
        classId:
          type: string
          default: ""
        classCode:
          type: string
          default: ""
        className:
          type: string
          default: ""
        teacherId:
          type: string
          default: ""
        teacherCode:
          type: string
          default: ""
        teacherName:
          type: string
          default: ""
        attendanceRate:
          type: number
          default: 0
      required:
        - datetime
        - classId
        - classCode
        - className
        - teacherId
        - teacherCode
        - teacherName
        - attendanceRate
    TeacherByLvl:
      type: object
      properties:
        datetime:
          type: string
          default: ""
        levelId:
          type: string
          default: ""
        levelCode:
          type: string
          default: ""
        levelName:
          type: string
          default: ""
        numTeacher:
          type: number
          default: 0
      required:
        - datetime
        - levelId
        - levelCode
        - levelName
        - numTeacher
    AttendanceSummaryByTable:
      type: object
      properties:
        datetime:
          type: string
          default: ""
        classId:
          type: string
          default: ""
        classCode:
          type: string
          default: ""
        className:
          type: string
          default: ""
        levelId:
          type: string
          default: ""
        levelCode:
          type: string
          default: ""
        levelName:
          type: string
          default: ""
        teacherId:
          type: string
          default: ""
        teacherCode:
          type: string
          default: ""
        teacherName:
          type: string
          default: ""
        numStudent:
          type: number
          default: 0
        numLessons:
          type: number
          default: 0
        duration:
          type: number
          default: 0
        numAttend:
          type: number
          default: 0
        attendanceRate:
          type: number
          default: 0
      required:
        - datetime
        - classId
        - classCode
        - className
        - levelId
        - levelCode
        - levelName
        - teacherId
        - teacherCode
        - teacherName
        - numStudent
        - numLessons
        - duration
        - numAttend
        - attendanceRate
    TeacherGroupAnalyse:
      type: object
      properties:
        datetime:
          type: string
          default: ""
        teacherGroupId:
          type: string
          default: ""
        teacherGroupCode:
          type: string
          default: ""
        teacherGroupName:
          type: string
          default: ""
        num:
          type: number
          default: 0
      required:
        - datetime
        - teacherGroupId
        - teacherGroupCode
        - teacherGroupName
        - num
    CommissionClassLevel:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        code:
          type: string
    CommissionRate:
      type: object
      properties:
        minStudent:
          type: number
        maxStudent:
          type: number
        hourlyAmount:
          type: number
    CommissionLevel:
      type: object
      properties:
        levels:
          type: array
          items:
            $ref: "#/components/schemas/CommissionClassLevel"
        rates:
          type: array
          items:
            $ref: "#/components/schemas/CommissionRate"
    TeacherCommissionSettingRequest:
      type: object
      properties:
        salaryMode:
          type: string
        defaultRate:
          type: number
        commissionPercent:
          type: number
        commissionLevel:
          type: array
          items:
            $ref: "#/components/schemas/CommissionLevel"
    InChargeCommissions:
      type: object
      properties:
        classId:
          type: string
        classCode:
          type: string
        className:
          type: string
        levelId:
          type: string
        levelCode:
          type: string
        levelLabel:
          type: string
        studentQty:
          type: number
        duration:
          type: number
        rate:
          type: number
        totalHour:
          type: number
        totalTeachHour:
          type: number
        totalFee:
          type: number
        commissionForClass:
          type: number
    ClassSubTotalSummaries:
      type: object
      properties:
        studentQty:
          type: number
        totalHour:
          type: number
        totalTeachHour:
          type: number
        totalFee:
          type: number
        commission:
          type: number
    CommissionSummaries:
      type: object
      properties:
        teacherId:
          type: string
        teacherName:
          type: string
        teacherCode:
          type: string
        salaryMode:
          type: string
        defaultRate:
          type: number
        defaultCommissionPercent:
          type: number
        totalCommissionPercent:
          type: number
        totalHourlyCommission:
          type: number
        totalInFinal:
          type: number
      required:
        - teacherId
        - teacherName
        - teacherCode
        - salaryMode
    CommissionResponseData:
      type: object
      properties:
        inChargeCommission:
          type: array
          items:
            $ref: "#/components/schemas/InChargeCommissions"
        inChargeSummary:
          $ref: "#/components/schemas/ClassSubTotalSummaries"
        replacementCommission:
          type: array
          items:
            $ref: "#/components/schemas/InChargeCommissions"
        replaceSummary:
          $ref: "#/components/schemas/ClassSubTotalSummaries"
        summary:
          $ref: "#/components/schemas/CommissionSummaries"
        errorMessage:
          type: string
    ScheduleWithStatistic:
      type: object
      properties:
        _id:
          type: string
        active:
          type: boolean
        day:
          type: string
        teacher:
          $ref: "#/components/schemas/ForeignKey"
        room:
          $ref: "#/components/schemas/ForeignKey"
        termNo:
          type: number
        scheduleNo:
          type: number
        startTime:
          type: string
        endTime:
          type: string
        lessonPlan:
          type: number
        tuitionClass:
          $ref: "#/components/schemas/ScheduleTuitionClass"
        duration:
          type: number
        description:
          type: string
        attendQty:
          type: number
        studentQty:
          type: number
      required:
        - _id
        - active
        - day
        - teacher
        - room
        - termNo
        - scheduleNo
        - startTime
        - endTime
        - lessonPlan
        - tuitionClass
        - duration
        - description
        - attendQty
        - studentQty
    TuitionClassWithSchedules:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        classCode:
          type: string
        className:
          type: string
        classType:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        maxLessons:
          type: number
        originalTuitionClassId:
          type: string
        totalSchedule:
          type: number
        lessonPlanCount:
          type: number
        academySessionClassGeneratorId:
          type: string
        defaultDuration:
          type: number
        billingMethod:
          type: string
        lessonsPerTerm:
          type: number
        defaultStart:
          type: string
        defaultEnd:
          type: string
        active:
          type: boolean
        description:
          type: string
        maxStudents:
          type: number
        academySession:
          $ref: "#/components/schemas/TuitionClassAcademySession"
        product:
          $ref: "#/components/schemas/TuitionClassProduct"
        level:
          $ref: "#/components/schemas/TuitionClassLevel"
        studentGroup:
          $ref: "#/components/schemas/TuitionClassStudentGroup"
        defaultTeacher:
          $ref: "#/components/schemas/TuitionClassDefaultTeacher"
        defaultRoom:
          $ref: "#/components/schemas/TuitionClassDefaultRoom"
        scheduleSetting:
          type: array
          items:
            $ref: "#/components/schemas/TuitionClassScheduleSetting"
        docNoFormat:
          $ref: "#/components/schemas/TuitionClassDocNoFormat"
        more:
          type: object
          default: *a94
        schedules:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleWithStatistic"
      required:
        - classCode
        - classType
        - startDate
        - endDate
        - defaultDuration
        - defaultStart
        - defaultEnd
        - academySession
        - product
        - defaultTeacher
        - defaultRoom
        - schedules
    RegenerateTuitionClassSchedule:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/TuitionClass"
        startDate:
          type: string
      required:
        - data
        - startDate
    ScheduleChanges:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        active:
          type: boolean
        scheduleNo:
          type: number
        termNo:
          type: number
        lessonPlan:
          type: string
        onlineClassUrl:
          type: string
        description:
          type: string
        startTime:
          type: string
        endTime:
          type: string
        duration:
          type: number
        day:
          type: string
        tuitionClass:
          $ref: "#/components/schemas/ScheduleTuitionClass"
        room:
          $ref: "#/components/schemas/ScheduleRoom"
        teacher:
          $ref: "#/components/schemas/ScheduleTeacher"
        more:
          type: object
          default: *a91
        attendQty:
          type: number
        studentQty:
          type: number
        pendingChangeStatus:
          type: string
      required:
        - attendQty
        - studentQty
        - pendingChangeStatus
    TuitionClassWithLastScheduleParam:
      type: object
      properties:
        cutoffDate:
          type: string
          example: 2025-08-27T23:59:59Z
        filter:
          type: object
          nullable: true
          description: MongoDB-style filter for tuition class
      required:
        - cutoffDate
    TuitionClassWithLastSchedule:
      type: object
      properties:
        _id:
          type: string
          format: uuid
          example: 2b7e23e5-fb7a-4b36-8b1e-fc6b94a14681
        tutorId:
          type: string
          format: uuid
          example: 2b7e23e5-fb7a-4b36-8b1e-fc6b94a14681
        productId:
          type: string
          format: uuid
          example: 2b7e23e5-fb7a-4b36-8b1e-fc6b94a14681
        studentGroupId:
          type: string
          format: uuid
          example: 2b7e23e5-fb7a-4b36-8b1e-fc6b94a14681
        lastSchedule:
          type: string
          format: date-time
          nullable: true
          example: 2025-08-23T01:00:00Z
          description: Last schedule before cutoffDate, or null if none found
      required:
        - _id
        - tutorId
        - productId
        - studentGroupId
    TuitionClassNearbyScheduleEntityQuerySpec:
      type: object
      properties:
        tuitionClass:
          type: object
          nullable: true
        schedule:
          type: object
          nullable: true
    TuitionClassWithNearbyScheduleParam:
      type: object
      properties:
        referenceDate:
          type: string
          example: 2025-08-27T23:59:59Z
          description:
            Reference date (ISO 8601). The query will search for schedules
            within ±day from this date.
        rangeInDays:
          type: number
          example: 7
          description:
            Number of days before and after the reference date to include (±N
            days).
        filters:
          nullable: true
          description: Optional MongoDB filter
          allOf:
            - $ref: "#/components/schemas/TuitionClassNearbyScheduleEntityQuerySpec"
        fields:
          nullable: true
          description: Optional MongoDB projection
          allOf:
            - $ref: "#/components/schemas/TuitionClassNearbyScheduleEntityQuerySpec"
      required:
        - referenceDate
        - rangeInDays
    TuitionClassNearbySchedule:
      type: object
      properties:
        _id:
          type: string
        day:
          type: string
        startTime:
          type: string
        endTime:
          type: string
      required:
        - _id
        - day
        - startTime
        - endTime
    TuitionClassWithNearbySchedule:
      type: object
      properties:
        _id:
          type: string
          format: uuid
          example: 2b7e23e5-fb7a-4b36-8b1e-fc6b94a14681
        tutorId:
          type: string
          format: uuid
          example: 2b7e23e5-fb7a-4b36-8b1e-fc6b94a14681
        productId:
          type: string
          format: uuid
          example: 2b7e23e5-fb7a-4b36-8b1e-fc6b94a14681
        studentGroupId:
          type: string
          format: uuid
          example: 2b7e23e5-fb7a-4b36-8b1e-fc6b94a14681
        nearbySchedules:
          type: array
          items:
            $ref: "#/components/schemas/TuitionClassNearbySchedule"
      required:
        - _id
        - tutorId
        - productId
        - studentGroupId
        - nearbySchedules
    CloseTuitionClassesRegistration:
      type: object
      properties:
        tuitionClassIds:
          type: array
          items:
            type: string
      required:
        - tuitionClassIds
    UserPermission:
      type: object
      properties:
        _id:
          type: string
        created:
          type: string
        updated:
          type: string
        createdBy:
          type: string
        updatedBy:
          type: string
        tenantId:
          type: number
        orgId:
          type: number
        branchId:
          type: number
        groups:
          type: array
          items:
            type: string
        uid:
          type: string
        userId:
          type: string
security:
  - x-org: []
  - oauth2: []
  - x-apikey: []
  - x-apisecret: []
  - x-guest-accesstoken: []
